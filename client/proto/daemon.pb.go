// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: daemon.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogLevel int32

const (
	LogLevel_UNKNOWN LogLevel = 0
	LogLevel_PANIC   LogLevel = 1
	LogLevel_FATAL   LogLevel = 2
	LogLevel_ERROR   LogLevel = 3
	LogLevel_WARN    LogLevel = 4
	LogLevel_INFO    LogLevel = 5
	LogLevel_DEBUG   LogLevel = 6
	LogLevel_TRACE   LogLevel = 7
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "UNKNOWN",
		1: "PANIC",
		2: "FATAL",
		3: "ERROR",
		4: "WARN",
		5: "INFO",
		6: "DEBUG",
		7: "TRACE",
	}
	LogLevel_value = map[string]int32{
		"UNKNOWN": 0,
		"PANIC":   1,
		"FATAL":   2,
		"ERROR":   3,
		"WARN":    4,
		"INFO":    5,
		"DEBUG":   6,
		"TRACE":   7,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_daemon_proto_enumTypes[0].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_daemon_proto_enumTypes[0]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{0}
}

type SystemEvent_Severity int32

const (
	SystemEvent_INFO     SystemEvent_Severity = 0
	SystemEvent_WARNING  SystemEvent_Severity = 1
	SystemEvent_ERROR    SystemEvent_Severity = 2
	SystemEvent_CRITICAL SystemEvent_Severity = 3
)

// Enum value maps for SystemEvent_Severity.
var (
	SystemEvent_Severity_name = map[int32]string{
		0: "INFO",
		1: "WARNING",
		2: "ERROR",
		3: "CRITICAL",
	}
	SystemEvent_Severity_value = map[string]int32{
		"INFO":     0,
		"WARNING":  1,
		"ERROR":    2,
		"CRITICAL": 3,
	}
)

func (x SystemEvent_Severity) Enum() *SystemEvent_Severity {
	p := new(SystemEvent_Severity)
	*p = x
	return p
}

func (x SystemEvent_Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemEvent_Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_daemon_proto_enumTypes[1].Descriptor()
}

func (SystemEvent_Severity) Type() protoreflect.EnumType {
	return &file_daemon_proto_enumTypes[1]
}

func (x SystemEvent_Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemEvent_Severity.Descriptor instead.
func (SystemEvent_Severity) EnumDescriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{49, 0}
}

type SystemEvent_Category int32

const (
	SystemEvent_NETWORK        SystemEvent_Category = 0
	SystemEvent_DNS            SystemEvent_Category = 1
	SystemEvent_AUTHENTICATION SystemEvent_Category = 2
	SystemEvent_CONNECTIVITY   SystemEvent_Category = 3
	SystemEvent_SYSTEM         SystemEvent_Category = 4
)

// Enum value maps for SystemEvent_Category.
var (
	SystemEvent_Category_name = map[int32]string{
		0: "NETWORK",
		1: "DNS",
		2: "AUTHENTICATION",
		3: "CONNECTIVITY",
		4: "SYSTEM",
	}
	SystemEvent_Category_value = map[string]int32{
		"NETWORK":        0,
		"DNS":            1,
		"AUTHENTICATION": 2,
		"CONNECTIVITY":   3,
		"SYSTEM":         4,
	}
)

func (x SystemEvent_Category) Enum() *SystemEvent_Category {
	p := new(SystemEvent_Category)
	*p = x
	return p
}

func (x SystemEvent_Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemEvent_Category) Descriptor() protoreflect.EnumDescriptor {
	return file_daemon_proto_enumTypes[2].Descriptor()
}

func (SystemEvent_Category) Type() protoreflect.EnumType {
	return &file_daemon_proto_enumTypes[2]
}

func (x SystemEvent_Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemEvent_Category.Descriptor instead.
func (SystemEvent_Category) EnumDescriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{49, 1}
}

type EmptyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	mi := &file_daemon_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{0}
}

type LoginRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// setupKey netbird setup key.
	SetupKey string `protobuf:"bytes,1,opt,name=setupKey,proto3" json:"setupKey,omitempty"`
	// This is the old PreSharedKey field which will be deprecated in favor of optionalPreSharedKey field that is defined as optional
	// to allow clearing of preshared key while being able to persist in the config file.
	//
	// Deprecated: Marked as deprecated in daemon.proto.
	PreSharedKey string `protobuf:"bytes,2,opt,name=preSharedKey,proto3" json:"preSharedKey,omitempty"`
	// managementUrl to authenticate.
	ManagementUrl string `protobuf:"bytes,3,opt,name=managementUrl,proto3" json:"managementUrl,omitempty"`
	// adminUrl to manage keys.
	AdminURL string `protobuf:"bytes,4,opt,name=adminURL,proto3" json:"adminURL,omitempty"`
	// natExternalIPs map list of external IPs
	NatExternalIPs []string `protobuf:"bytes,5,rep,name=natExternalIPs,proto3" json:"natExternalIPs,omitempty"`
	// cleanNATExternalIPs clean map list of external IPs.
	// This is needed because the generated code
	// omits initialized empty slices due to omitempty tags
	CleanNATExternalIPs  bool                 `protobuf:"varint,6,opt,name=cleanNATExternalIPs,proto3" json:"cleanNATExternalIPs,omitempty"`
	CustomDNSAddress     []byte               `protobuf:"bytes,7,opt,name=customDNSAddress,proto3" json:"customDNSAddress,omitempty"`
	IsUnixDesktopClient  bool                 `protobuf:"varint,8,opt,name=isUnixDesktopClient,proto3" json:"isUnixDesktopClient,omitempty"`
	Hostname             string               `protobuf:"bytes,9,opt,name=hostname,proto3" json:"hostname,omitempty"`
	RosenpassEnabled     *bool                `protobuf:"varint,10,opt,name=rosenpassEnabled,proto3,oneof" json:"rosenpassEnabled,omitempty"`
	InterfaceName        *string              `protobuf:"bytes,11,opt,name=interfaceName,proto3,oneof" json:"interfaceName,omitempty"`
	WireguardPort        *int64               `protobuf:"varint,12,opt,name=wireguardPort,proto3,oneof" json:"wireguardPort,omitempty"`
	OptionalPreSharedKey *string              `protobuf:"bytes,13,opt,name=optionalPreSharedKey,proto3,oneof" json:"optionalPreSharedKey,omitempty"`
	DisableAutoConnect   *bool                `protobuf:"varint,14,opt,name=disableAutoConnect,proto3,oneof" json:"disableAutoConnect,omitempty"`
	ServerSSHAllowed     *bool                `protobuf:"varint,15,opt,name=serverSSHAllowed,proto3,oneof" json:"serverSSHAllowed,omitempty"`
	RosenpassPermissive  *bool                `protobuf:"varint,16,opt,name=rosenpassPermissive,proto3,oneof" json:"rosenpassPermissive,omitempty"`
	ExtraIFaceBlacklist  []string             `protobuf:"bytes,17,rep,name=extraIFaceBlacklist,proto3" json:"extraIFaceBlacklist,omitempty"`
	NetworkMonitor       *bool                `protobuf:"varint,18,opt,name=networkMonitor,proto3,oneof" json:"networkMonitor,omitempty"`
	DnsRouteInterval     *durationpb.Duration `protobuf:"bytes,19,opt,name=dnsRouteInterval,proto3,oneof" json:"dnsRouteInterval,omitempty"`
	DisableClientRoutes  *bool                `protobuf:"varint,20,opt,name=disable_client_routes,json=disableClientRoutes,proto3,oneof" json:"disable_client_routes,omitempty"`
	DisableServerRoutes  *bool                `protobuf:"varint,21,opt,name=disable_server_routes,json=disableServerRoutes,proto3,oneof" json:"disable_server_routes,omitempty"`
	DisableDns           *bool                `protobuf:"varint,22,opt,name=disable_dns,json=disableDns,proto3,oneof" json:"disable_dns,omitempty"`
	DisableFirewall      *bool                `protobuf:"varint,23,opt,name=disable_firewall,json=disableFirewall,proto3,oneof" json:"disable_firewall,omitempty"`
	BlockLanAccess       *bool                `protobuf:"varint,24,opt,name=block_lan_access,json=blockLanAccess,proto3,oneof" json:"block_lan_access,omitempty"`
	DisableNotifications *bool                `protobuf:"varint,25,opt,name=disable_notifications,json=disableNotifications,proto3,oneof" json:"disable_notifications,omitempty"`
	DnsLabels            []string             `protobuf:"bytes,26,rep,name=dns_labels,json=dnsLabels,proto3" json:"dns_labels,omitempty"`
	// cleanDNSLabels clean map list of DNS labels.
	// This is needed because the generated code
	// omits initialized empty slices due to omitempty tags
	CleanDNSLabels        bool    `protobuf:"varint,27,opt,name=cleanDNSLabels,proto3" json:"cleanDNSLabels,omitempty"`
	LazyConnectionEnabled *bool   `protobuf:"varint,28,opt,name=lazyConnectionEnabled,proto3,oneof" json:"lazyConnectionEnabled,omitempty"`
	BlockInbound          *bool   `protobuf:"varint,29,opt,name=block_inbound,json=blockInbound,proto3,oneof" json:"block_inbound,omitempty"`
	ProfileName           *string `protobuf:"bytes,30,opt,name=profileName,proto3,oneof" json:"profileName,omitempty"`
	Username              *string `protobuf:"bytes,31,opt,name=username,proto3,oneof" json:"username,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_daemon_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{1}
}

func (x *LoginRequest) GetSetupKey() string {
	if x != nil {
		return x.SetupKey
	}
	return ""
}

// Deprecated: Marked as deprecated in daemon.proto.
func (x *LoginRequest) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *LoginRequest) GetManagementUrl() string {
	if x != nil {
		return x.ManagementUrl
	}
	return ""
}

func (x *LoginRequest) GetAdminURL() string {
	if x != nil {
		return x.AdminURL
	}
	return ""
}

func (x *LoginRequest) GetNatExternalIPs() []string {
	if x != nil {
		return x.NatExternalIPs
	}
	return nil
}

func (x *LoginRequest) GetCleanNATExternalIPs() bool {
	if x != nil {
		return x.CleanNATExternalIPs
	}
	return false
}

func (x *LoginRequest) GetCustomDNSAddress() []byte {
	if x != nil {
		return x.CustomDNSAddress
	}
	return nil
}

func (x *LoginRequest) GetIsUnixDesktopClient() bool {
	if x != nil {
		return x.IsUnixDesktopClient
	}
	return false
}

func (x *LoginRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *LoginRequest) GetRosenpassEnabled() bool {
	if x != nil && x.RosenpassEnabled != nil {
		return *x.RosenpassEnabled
	}
	return false
}

func (x *LoginRequest) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *LoginRequest) GetWireguardPort() int64 {
	if x != nil && x.WireguardPort != nil {
		return *x.WireguardPort
	}
	return 0
}

func (x *LoginRequest) GetOptionalPreSharedKey() string {
	if x != nil && x.OptionalPreSharedKey != nil {
		return *x.OptionalPreSharedKey
	}
	return ""
}

func (x *LoginRequest) GetDisableAutoConnect() bool {
	if x != nil && x.DisableAutoConnect != nil {
		return *x.DisableAutoConnect
	}
	return false
}

func (x *LoginRequest) GetServerSSHAllowed() bool {
	if x != nil && x.ServerSSHAllowed != nil {
		return *x.ServerSSHAllowed
	}
	return false
}

func (x *LoginRequest) GetRosenpassPermissive() bool {
	if x != nil && x.RosenpassPermissive != nil {
		return *x.RosenpassPermissive
	}
	return false
}

func (x *LoginRequest) GetExtraIFaceBlacklist() []string {
	if x != nil {
		return x.ExtraIFaceBlacklist
	}
	return nil
}

func (x *LoginRequest) GetNetworkMonitor() bool {
	if x != nil && x.NetworkMonitor != nil {
		return *x.NetworkMonitor
	}
	return false
}

func (x *LoginRequest) GetDnsRouteInterval() *durationpb.Duration {
	if x != nil {
		return x.DnsRouteInterval
	}
	return nil
}

func (x *LoginRequest) GetDisableClientRoutes() bool {
	if x != nil && x.DisableClientRoutes != nil {
		return *x.DisableClientRoutes
	}
	return false
}

func (x *LoginRequest) GetDisableServerRoutes() bool {
	if x != nil && x.DisableServerRoutes != nil {
		return *x.DisableServerRoutes
	}
	return false
}

func (x *LoginRequest) GetDisableDns() bool {
	if x != nil && x.DisableDns != nil {
		return *x.DisableDns
	}
	return false
}

func (x *LoginRequest) GetDisableFirewall() bool {
	if x != nil && x.DisableFirewall != nil {
		return *x.DisableFirewall
	}
	return false
}

func (x *LoginRequest) GetBlockLanAccess() bool {
	if x != nil && x.BlockLanAccess != nil {
		return *x.BlockLanAccess
	}
	return false
}

func (x *LoginRequest) GetDisableNotifications() bool {
	if x != nil && x.DisableNotifications != nil {
		return *x.DisableNotifications
	}
	return false
}

func (x *LoginRequest) GetDnsLabels() []string {
	if x != nil {
		return x.DnsLabels
	}
	return nil
}

func (x *LoginRequest) GetCleanDNSLabels() bool {
	if x != nil {
		return x.CleanDNSLabels
	}
	return false
}

func (x *LoginRequest) GetLazyConnectionEnabled() bool {
	if x != nil && x.LazyConnectionEnabled != nil {
		return *x.LazyConnectionEnabled
	}
	return false
}

func (x *LoginRequest) GetBlockInbound() bool {
	if x != nil && x.BlockInbound != nil {
		return *x.BlockInbound
	}
	return false
}

func (x *LoginRequest) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *LoginRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type LoginResponse struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	NeedsSSOLogin           bool                   `protobuf:"varint,1,opt,name=needsSSOLogin,proto3" json:"needsSSOLogin,omitempty"`
	UserCode                string                 `protobuf:"bytes,2,opt,name=userCode,proto3" json:"userCode,omitempty"`
	VerificationURI         string                 `protobuf:"bytes,3,opt,name=verificationURI,proto3" json:"verificationURI,omitempty"`
	VerificationURIComplete string                 `protobuf:"bytes,4,opt,name=verificationURIComplete,proto3" json:"verificationURIComplete,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_daemon_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{2}
}

func (x *LoginResponse) GetNeedsSSOLogin() bool {
	if x != nil {
		return x.NeedsSSOLogin
	}
	return false
}

func (x *LoginResponse) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *LoginResponse) GetVerificationURI() string {
	if x != nil {
		return x.VerificationURI
	}
	return ""
}

func (x *LoginResponse) GetVerificationURIComplete() string {
	if x != nil {
		return x.VerificationURIComplete
	}
	return ""
}

type WaitSSOLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserCode      string                 `protobuf:"bytes,1,opt,name=userCode,proto3" json:"userCode,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitSSOLoginRequest) Reset() {
	*x = WaitSSOLoginRequest{}
	mi := &file_daemon_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitSSOLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitSSOLoginRequest) ProtoMessage() {}

func (x *WaitSSOLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitSSOLoginRequest.ProtoReflect.Descriptor instead.
func (*WaitSSOLoginRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{3}
}

func (x *WaitSSOLoginRequest) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *WaitSSOLoginRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type WaitSSOLoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitSSOLoginResponse) Reset() {
	*x = WaitSSOLoginResponse{}
	mi := &file_daemon_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitSSOLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitSSOLoginResponse) ProtoMessage() {}

func (x *WaitSSOLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitSSOLoginResponse.ProtoReflect.Descriptor instead.
func (*WaitSSOLoginResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{4}
}

func (x *WaitSSOLoginResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileName   *string                `protobuf:"bytes,1,opt,name=profileName,proto3,oneof" json:"profileName,omitempty"`
	Username      *string                `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpRequest) Reset() {
	*x = UpRequest{}
	mi := &file_daemon_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpRequest) ProtoMessage() {}

func (x *UpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpRequest.ProtoReflect.Descriptor instead.
func (*UpRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{5}
}

func (x *UpRequest) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *UpRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type UpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpResponse) Reset() {
	*x = UpResponse{}
	mi := &file_daemon_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpResponse) ProtoMessage() {}

func (x *UpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpResponse.ProtoReflect.Descriptor instead.
func (*UpResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{6}
}

type StatusRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	GetFullPeerStatus bool                   `protobuf:"varint,1,opt,name=getFullPeerStatus,proto3" json:"getFullPeerStatus,omitempty"`
	ShouldRunProbes   bool                   `protobuf:"varint,2,opt,name=shouldRunProbes,proto3" json:"shouldRunProbes,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_daemon_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{7}
}

func (x *StatusRequest) GetGetFullPeerStatus() bool {
	if x != nil {
		return x.GetFullPeerStatus
	}
	return false
}

func (x *StatusRequest) GetShouldRunProbes() bool {
	if x != nil {
		return x.ShouldRunProbes
	}
	return false
}

type StatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// status of the server.
	Status     string      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	FullStatus *FullStatus `protobuf:"bytes,2,opt,name=fullStatus,proto3" json:"fullStatus,omitempty"`
	// NetBird daemon version
	DaemonVersion string `protobuf:"bytes,3,opt,name=daemonVersion,proto3" json:"daemonVersion,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_daemon_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{8}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StatusResponse) GetFullStatus() *FullStatus {
	if x != nil {
		return x.FullStatus
	}
	return nil
}

func (x *StatusResponse) GetDaemonVersion() string {
	if x != nil {
		return x.DaemonVersion
	}
	return ""
}

type DownRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownRequest) Reset() {
	*x = DownRequest{}
	mi := &file_daemon_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownRequest) ProtoMessage() {}

func (x *DownRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownRequest.ProtoReflect.Descriptor instead.
func (*DownRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{9}
}

type DownResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownResponse) Reset() {
	*x = DownResponse{}
	mi := &file_daemon_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownResponse) ProtoMessage() {}

func (x *DownResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownResponse.ProtoReflect.Descriptor instead.
func (*DownResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{10}
}

type GetConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileName   string                 `protobuf:"bytes,1,opt,name=profileName,proto3" json:"profileName,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConfigRequest) Reset() {
	*x = GetConfigRequest{}
	mi := &file_daemon_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigRequest) ProtoMessage() {}

func (x *GetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigRequest.ProtoReflect.Descriptor instead.
func (*GetConfigRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{11}
}

func (x *GetConfigRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *GetConfigRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetConfigResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// managementUrl settings value.
	ManagementUrl string `protobuf:"bytes,1,opt,name=managementUrl,proto3" json:"managementUrl,omitempty"`
	// configFile settings value.
	ConfigFile string `protobuf:"bytes,2,opt,name=configFile,proto3" json:"configFile,omitempty"`
	// logFile settings value.
	LogFile string `protobuf:"bytes,3,opt,name=logFile,proto3" json:"logFile,omitempty"`
	// preSharedKey settings value.
	PreSharedKey string `protobuf:"bytes,4,opt,name=preSharedKey,proto3" json:"preSharedKey,omitempty"`
	// adminURL settings value.
	AdminURL              string `protobuf:"bytes,5,opt,name=adminURL,proto3" json:"adminURL,omitempty"`
	InterfaceName         string `protobuf:"bytes,6,opt,name=interfaceName,proto3" json:"interfaceName,omitempty"`
	WireguardPort         int64  `protobuf:"varint,7,opt,name=wireguardPort,proto3" json:"wireguardPort,omitempty"`
	DisableAutoConnect    bool   `protobuf:"varint,9,opt,name=disableAutoConnect,proto3" json:"disableAutoConnect,omitempty"`
	ServerSSHAllowed      bool   `protobuf:"varint,10,opt,name=serverSSHAllowed,proto3" json:"serverSSHAllowed,omitempty"`
	RosenpassEnabled      bool   `protobuf:"varint,11,opt,name=rosenpassEnabled,proto3" json:"rosenpassEnabled,omitempty"`
	RosenpassPermissive   bool   `protobuf:"varint,12,opt,name=rosenpassPermissive,proto3" json:"rosenpassPermissive,omitempty"`
	DisableNotifications  bool   `protobuf:"varint,13,opt,name=disable_notifications,json=disableNotifications,proto3" json:"disable_notifications,omitempty"`
	LazyConnectionEnabled bool   `protobuf:"varint,14,opt,name=lazyConnectionEnabled,proto3" json:"lazyConnectionEnabled,omitempty"`
	BlockInbound          bool   `protobuf:"varint,15,opt,name=blockInbound,proto3" json:"blockInbound,omitempty"`
	NetworkMonitor        bool   `protobuf:"varint,16,opt,name=networkMonitor,proto3" json:"networkMonitor,omitempty"`
	DisableDns            bool   `protobuf:"varint,17,opt,name=disable_dns,json=disableDns,proto3" json:"disable_dns,omitempty"`
	DisableClientRoutes   bool   `protobuf:"varint,18,opt,name=disable_client_routes,json=disableClientRoutes,proto3" json:"disable_client_routes,omitempty"`
	DisableServerRoutes   bool   `protobuf:"varint,19,opt,name=disable_server_routes,json=disableServerRoutes,proto3" json:"disable_server_routes,omitempty"`
	BlockLanAccess        bool   `protobuf:"varint,20,opt,name=block_lan_access,json=blockLanAccess,proto3" json:"block_lan_access,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *GetConfigResponse) Reset() {
	*x = GetConfigResponse{}
	mi := &file_daemon_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigResponse) ProtoMessage() {}

func (x *GetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigResponse.ProtoReflect.Descriptor instead.
func (*GetConfigResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{12}
}

func (x *GetConfigResponse) GetManagementUrl() string {
	if x != nil {
		return x.ManagementUrl
	}
	return ""
}

func (x *GetConfigResponse) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *GetConfigResponse) GetLogFile() string {
	if x != nil {
		return x.LogFile
	}
	return ""
}

func (x *GetConfigResponse) GetPreSharedKey() string {
	if x != nil {
		return x.PreSharedKey
	}
	return ""
}

func (x *GetConfigResponse) GetAdminURL() string {
	if x != nil {
		return x.AdminURL
	}
	return ""
}

func (x *GetConfigResponse) GetInterfaceName() string {
	if x != nil {
		return x.InterfaceName
	}
	return ""
}

func (x *GetConfigResponse) GetWireguardPort() int64 {
	if x != nil {
		return x.WireguardPort
	}
	return 0
}

func (x *GetConfigResponse) GetDisableAutoConnect() bool {
	if x != nil {
		return x.DisableAutoConnect
	}
	return false
}

func (x *GetConfigResponse) GetServerSSHAllowed() bool {
	if x != nil {
		return x.ServerSSHAllowed
	}
	return false
}

func (x *GetConfigResponse) GetRosenpassEnabled() bool {
	if x != nil {
		return x.RosenpassEnabled
	}
	return false
}

func (x *GetConfigResponse) GetRosenpassPermissive() bool {
	if x != nil {
		return x.RosenpassPermissive
	}
	return false
}

func (x *GetConfigResponse) GetDisableNotifications() bool {
	if x != nil {
		return x.DisableNotifications
	}
	return false
}

func (x *GetConfigResponse) GetLazyConnectionEnabled() bool {
	if x != nil {
		return x.LazyConnectionEnabled
	}
	return false
}

func (x *GetConfigResponse) GetBlockInbound() bool {
	if x != nil {
		return x.BlockInbound
	}
	return false
}

func (x *GetConfigResponse) GetNetworkMonitor() bool {
	if x != nil {
		return x.NetworkMonitor
	}
	return false
}

func (x *GetConfigResponse) GetDisableDns() bool {
	if x != nil {
		return x.DisableDns
	}
	return false
}

func (x *GetConfigResponse) GetDisableClientRoutes() bool {
	if x != nil {
		return x.DisableClientRoutes
	}
	return false
}

func (x *GetConfigResponse) GetDisableServerRoutes() bool {
	if x != nil {
		return x.DisableServerRoutes
	}
	return false
}

func (x *GetConfigResponse) GetBlockLanAccess() bool {
	if x != nil {
		return x.BlockLanAccess
	}
	return false
}

// PeerState contains the latest state of a peer
type PeerState struct {
	state                      protoimpl.MessageState `protogen:"open.v1"`
	IP                         string                 `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	PubKey                     string                 `protobuf:"bytes,2,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	ConnStatus                 string                 `protobuf:"bytes,3,opt,name=connStatus,proto3" json:"connStatus,omitempty"`
	ConnStatusUpdate           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=connStatusUpdate,proto3" json:"connStatusUpdate,omitempty"`
	Relayed                    bool                   `protobuf:"varint,5,opt,name=relayed,proto3" json:"relayed,omitempty"`
	LocalIceCandidateType      string                 `protobuf:"bytes,7,opt,name=localIceCandidateType,proto3" json:"localIceCandidateType,omitempty"`
	RemoteIceCandidateType     string                 `protobuf:"bytes,8,opt,name=remoteIceCandidateType,proto3" json:"remoteIceCandidateType,omitempty"`
	Fqdn                       string                 `protobuf:"bytes,9,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	LocalIceCandidateEndpoint  string                 `protobuf:"bytes,10,opt,name=localIceCandidateEndpoint,proto3" json:"localIceCandidateEndpoint,omitempty"`
	RemoteIceCandidateEndpoint string                 `protobuf:"bytes,11,opt,name=remoteIceCandidateEndpoint,proto3" json:"remoteIceCandidateEndpoint,omitempty"`
	LastWireguardHandshake     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=lastWireguardHandshake,proto3" json:"lastWireguardHandshake,omitempty"`
	BytesRx                    int64                  `protobuf:"varint,13,opt,name=bytesRx,proto3" json:"bytesRx,omitempty"`
	BytesTx                    int64                  `protobuf:"varint,14,opt,name=bytesTx,proto3" json:"bytesTx,omitempty"`
	RosenpassEnabled           bool                   `protobuf:"varint,15,opt,name=rosenpassEnabled,proto3" json:"rosenpassEnabled,omitempty"`
	Networks                   []string               `protobuf:"bytes,16,rep,name=networks,proto3" json:"networks,omitempty"`
	Latency                    *durationpb.Duration   `protobuf:"bytes,17,opt,name=latency,proto3" json:"latency,omitempty"`
	RelayAddress               string                 `protobuf:"bytes,18,opt,name=relayAddress,proto3" json:"relayAddress,omitempty"`
	unknownFields              protoimpl.UnknownFields
	sizeCache                  protoimpl.SizeCache
}

func (x *PeerState) Reset() {
	*x = PeerState{}
	mi := &file_daemon_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PeerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerState) ProtoMessage() {}

func (x *PeerState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerState.ProtoReflect.Descriptor instead.
func (*PeerState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{13}
}

func (x *PeerState) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *PeerState) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *PeerState) GetConnStatus() string {
	if x != nil {
		return x.ConnStatus
	}
	return ""
}

func (x *PeerState) GetConnStatusUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.ConnStatusUpdate
	}
	return nil
}

func (x *PeerState) GetRelayed() bool {
	if x != nil {
		return x.Relayed
	}
	return false
}

func (x *PeerState) GetLocalIceCandidateType() string {
	if x != nil {
		return x.LocalIceCandidateType
	}
	return ""
}

func (x *PeerState) GetRemoteIceCandidateType() string {
	if x != nil {
		return x.RemoteIceCandidateType
	}
	return ""
}

func (x *PeerState) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *PeerState) GetLocalIceCandidateEndpoint() string {
	if x != nil {
		return x.LocalIceCandidateEndpoint
	}
	return ""
}

func (x *PeerState) GetRemoteIceCandidateEndpoint() string {
	if x != nil {
		return x.RemoteIceCandidateEndpoint
	}
	return ""
}

func (x *PeerState) GetLastWireguardHandshake() *timestamppb.Timestamp {
	if x != nil {
		return x.LastWireguardHandshake
	}
	return nil
}

func (x *PeerState) GetBytesRx() int64 {
	if x != nil {
		return x.BytesRx
	}
	return 0
}

func (x *PeerState) GetBytesTx() int64 {
	if x != nil {
		return x.BytesTx
	}
	return 0
}

func (x *PeerState) GetRosenpassEnabled() bool {
	if x != nil {
		return x.RosenpassEnabled
	}
	return false
}

func (x *PeerState) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

func (x *PeerState) GetLatency() *durationpb.Duration {
	if x != nil {
		return x.Latency
	}
	return nil
}

func (x *PeerState) GetRelayAddress() string {
	if x != nil {
		return x.RelayAddress
	}
	return ""
}

// LocalPeerState contains the latest state of the local peer
type LocalPeerState struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	IP                  string                 `protobuf:"bytes,1,opt,name=IP,proto3" json:"IP,omitempty"`
	PubKey              string                 `protobuf:"bytes,2,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	KernelInterface     bool                   `protobuf:"varint,3,opt,name=kernelInterface,proto3" json:"kernelInterface,omitempty"`
	Fqdn                string                 `protobuf:"bytes,4,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	RosenpassEnabled    bool                   `protobuf:"varint,5,opt,name=rosenpassEnabled,proto3" json:"rosenpassEnabled,omitempty"`
	RosenpassPermissive bool                   `protobuf:"varint,6,opt,name=rosenpassPermissive,proto3" json:"rosenpassPermissive,omitempty"`
	Networks            []string               `protobuf:"bytes,7,rep,name=networks,proto3" json:"networks,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *LocalPeerState) Reset() {
	*x = LocalPeerState{}
	mi := &file_daemon_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalPeerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalPeerState) ProtoMessage() {}

func (x *LocalPeerState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalPeerState.ProtoReflect.Descriptor instead.
func (*LocalPeerState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{14}
}

func (x *LocalPeerState) GetIP() string {
	if x != nil {
		return x.IP
	}
	return ""
}

func (x *LocalPeerState) GetPubKey() string {
	if x != nil {
		return x.PubKey
	}
	return ""
}

func (x *LocalPeerState) GetKernelInterface() bool {
	if x != nil {
		return x.KernelInterface
	}
	return false
}

func (x *LocalPeerState) GetFqdn() string {
	if x != nil {
		return x.Fqdn
	}
	return ""
}

func (x *LocalPeerState) GetRosenpassEnabled() bool {
	if x != nil {
		return x.RosenpassEnabled
	}
	return false
}

func (x *LocalPeerState) GetRosenpassPermissive() bool {
	if x != nil {
		return x.RosenpassPermissive
	}
	return false
}

func (x *LocalPeerState) GetNetworks() []string {
	if x != nil {
		return x.Networks
	}
	return nil
}

// SignalState contains the latest state of a signal connection
type SignalState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	URL           string                 `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Connected     bool                   `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalState) Reset() {
	*x = SignalState{}
	mi := &file_daemon_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalState) ProtoMessage() {}

func (x *SignalState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalState.ProtoReflect.Descriptor instead.
func (*SignalState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{15}
}

func (x *SignalState) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *SignalState) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *SignalState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ManagementState contains the latest state of a management connection
type ManagementState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	URL           string                 `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Connected     bool                   `protobuf:"varint,2,opt,name=connected,proto3" json:"connected,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagementState) Reset() {
	*x = ManagementState{}
	mi := &file_daemon_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagementState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagementState) ProtoMessage() {}

func (x *ManagementState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagementState.ProtoReflect.Descriptor instead.
func (*ManagementState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{16}
}

func (x *ManagementState) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ManagementState) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *ManagementState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// RelayState contains the latest state of the relay
type RelayState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	URI           string                 `protobuf:"bytes,1,opt,name=URI,proto3" json:"URI,omitempty"`
	Available     bool                   `protobuf:"varint,2,opt,name=available,proto3" json:"available,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RelayState) Reset() {
	*x = RelayState{}
	mi := &file_daemon_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RelayState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RelayState) ProtoMessage() {}

func (x *RelayState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RelayState.ProtoReflect.Descriptor instead.
func (*RelayState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{17}
}

func (x *RelayState) GetURI() string {
	if x != nil {
		return x.URI
	}
	return ""
}

func (x *RelayState) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

func (x *RelayState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type NSGroupState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []string               `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Domains       []string               `protobuf:"bytes,2,rep,name=domains,proto3" json:"domains,omitempty"`
	Enabled       bool                   `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Error         string                 `protobuf:"bytes,4,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NSGroupState) Reset() {
	*x = NSGroupState{}
	mi := &file_daemon_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NSGroupState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NSGroupState) ProtoMessage() {}

func (x *NSGroupState) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NSGroupState.ProtoReflect.Descriptor instead.
func (*NSGroupState) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{18}
}

func (x *NSGroupState) GetServers() []string {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *NSGroupState) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *NSGroupState) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *NSGroupState) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// FullStatus contains the full state held by the Status instance
type FullStatus struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	ManagementState         *ManagementState       `protobuf:"bytes,1,opt,name=managementState,proto3" json:"managementState,omitempty"`
	SignalState             *SignalState           `protobuf:"bytes,2,opt,name=signalState,proto3" json:"signalState,omitempty"`
	LocalPeerState          *LocalPeerState        `protobuf:"bytes,3,opt,name=localPeerState,proto3" json:"localPeerState,omitempty"`
	Peers                   []*PeerState           `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`
	Relays                  []*RelayState          `protobuf:"bytes,5,rep,name=relays,proto3" json:"relays,omitempty"`
	DnsServers              []*NSGroupState        `protobuf:"bytes,6,rep,name=dns_servers,json=dnsServers,proto3" json:"dns_servers,omitempty"`
	NumberOfForwardingRules int32                  `protobuf:"varint,8,opt,name=NumberOfForwardingRules,proto3" json:"NumberOfForwardingRules,omitempty"`
	Events                  []*SystemEvent         `protobuf:"bytes,7,rep,name=events,proto3" json:"events,omitempty"`
	LazyConnectionEnabled   bool                   `protobuf:"varint,9,opt,name=lazyConnectionEnabled,proto3" json:"lazyConnectionEnabled,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *FullStatus) Reset() {
	*x = FullStatus{}
	mi := &file_daemon_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullStatus) ProtoMessage() {}

func (x *FullStatus) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullStatus.ProtoReflect.Descriptor instead.
func (*FullStatus) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{19}
}

func (x *FullStatus) GetManagementState() *ManagementState {
	if x != nil {
		return x.ManagementState
	}
	return nil
}

func (x *FullStatus) GetSignalState() *SignalState {
	if x != nil {
		return x.SignalState
	}
	return nil
}

func (x *FullStatus) GetLocalPeerState() *LocalPeerState {
	if x != nil {
		return x.LocalPeerState
	}
	return nil
}

func (x *FullStatus) GetPeers() []*PeerState {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *FullStatus) GetRelays() []*RelayState {
	if x != nil {
		return x.Relays
	}
	return nil
}

func (x *FullStatus) GetDnsServers() []*NSGroupState {
	if x != nil {
		return x.DnsServers
	}
	return nil
}

func (x *FullStatus) GetNumberOfForwardingRules() int32 {
	if x != nil {
		return x.NumberOfForwardingRules
	}
	return 0
}

func (x *FullStatus) GetEvents() []*SystemEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *FullStatus) GetLazyConnectionEnabled() bool {
	if x != nil {
		return x.LazyConnectionEnabled
	}
	return false
}

// Networks
type ListNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksRequest) Reset() {
	*x = ListNetworksRequest{}
	mi := &file_daemon_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksRequest) ProtoMessage() {}

func (x *ListNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksRequest.ProtoReflect.Descriptor instead.
func (*ListNetworksRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{20}
}

type ListNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Routes        []*Network             `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNetworksResponse) Reset() {
	*x = ListNetworksResponse{}
	mi := &file_daemon_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNetworksResponse) ProtoMessage() {}

func (x *ListNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNetworksResponse.ProtoReflect.Descriptor instead.
func (*ListNetworksResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{21}
}

func (x *ListNetworksResponse) GetRoutes() []*Network {
	if x != nil {
		return x.Routes
	}
	return nil
}

type SelectNetworksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NetworkIDs    []string               `protobuf:"bytes,1,rep,name=networkIDs,proto3" json:"networkIDs,omitempty"`
	Append        bool                   `protobuf:"varint,2,opt,name=append,proto3" json:"append,omitempty"`
	All           bool                   `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectNetworksRequest) Reset() {
	*x = SelectNetworksRequest{}
	mi := &file_daemon_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectNetworksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectNetworksRequest) ProtoMessage() {}

func (x *SelectNetworksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectNetworksRequest.ProtoReflect.Descriptor instead.
func (*SelectNetworksRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{22}
}

func (x *SelectNetworksRequest) GetNetworkIDs() []string {
	if x != nil {
		return x.NetworkIDs
	}
	return nil
}

func (x *SelectNetworksRequest) GetAppend() bool {
	if x != nil {
		return x.Append
	}
	return false
}

func (x *SelectNetworksRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type SelectNetworksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectNetworksResponse) Reset() {
	*x = SelectNetworksResponse{}
	mi := &file_daemon_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectNetworksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectNetworksResponse) ProtoMessage() {}

func (x *SelectNetworksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectNetworksResponse.ProtoReflect.Descriptor instead.
func (*SelectNetworksResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{23}
}

type IPList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ips           []string               `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IPList) Reset() {
	*x = IPList{}
	mi := &file_daemon_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IPList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPList) ProtoMessage() {}

func (x *IPList) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPList.ProtoReflect.Descriptor instead.
func (*IPList) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{24}
}

func (x *IPList) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

type Network struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ID            string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Range         string                 `protobuf:"bytes,2,opt,name=range,proto3" json:"range,omitempty"`
	Selected      bool                   `protobuf:"varint,3,opt,name=selected,proto3" json:"selected,omitempty"`
	Domains       []string               `protobuf:"bytes,4,rep,name=domains,proto3" json:"domains,omitempty"`
	ResolvedIPs   map[string]*IPList     `protobuf:"bytes,5,rep,name=resolvedIPs,proto3" json:"resolvedIPs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Network) Reset() {
	*x = Network{}
	mi := &file_daemon_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Network) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Network) ProtoMessage() {}

func (x *Network) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Network.ProtoReflect.Descriptor instead.
func (*Network) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{25}
}

func (x *Network) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Network) GetRange() string {
	if x != nil {
		return x.Range
	}
	return ""
}

func (x *Network) GetSelected() bool {
	if x != nil {
		return x.Selected
	}
	return false
}

func (x *Network) GetDomains() []string {
	if x != nil {
		return x.Domains
	}
	return nil
}

func (x *Network) GetResolvedIPs() map[string]*IPList {
	if x != nil {
		return x.ResolvedIPs
	}
	return nil
}

// ForwardingRules
type PortInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to PortSelection:
	//
	//	*PortInfo_Port
	//	*PortInfo_Range_
	PortSelection isPortInfo_PortSelection `protobuf_oneof:"portSelection"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortInfo) Reset() {
	*x = PortInfo{}
	mi := &file_daemon_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortInfo) ProtoMessage() {}

func (x *PortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortInfo.ProtoReflect.Descriptor instead.
func (*PortInfo) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{26}
}

func (x *PortInfo) GetPortSelection() isPortInfo_PortSelection {
	if x != nil {
		return x.PortSelection
	}
	return nil
}

func (x *PortInfo) GetPort() uint32 {
	if x != nil {
		if x, ok := x.PortSelection.(*PortInfo_Port); ok {
			return x.Port
		}
	}
	return 0
}

func (x *PortInfo) GetRange() *PortInfo_Range {
	if x != nil {
		if x, ok := x.PortSelection.(*PortInfo_Range_); ok {
			return x.Range
		}
	}
	return nil
}

type isPortInfo_PortSelection interface {
	isPortInfo_PortSelection()
}

type PortInfo_Port struct {
	Port uint32 `protobuf:"varint,1,opt,name=port,proto3,oneof"`
}

type PortInfo_Range_ struct {
	Range *PortInfo_Range `protobuf:"bytes,2,opt,name=range,proto3,oneof"`
}

func (*PortInfo_Port) isPortInfo_PortSelection() {}

func (*PortInfo_Range_) isPortInfo_PortSelection() {}

type ForwardingRule struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Protocol           string                 `protobuf:"bytes,1,opt,name=protocol,proto3" json:"protocol,omitempty"`
	DestinationPort    *PortInfo              `protobuf:"bytes,2,opt,name=destinationPort,proto3" json:"destinationPort,omitempty"`
	TranslatedAddress  string                 `protobuf:"bytes,3,opt,name=translatedAddress,proto3" json:"translatedAddress,omitempty"`
	TranslatedHostname string                 `protobuf:"bytes,4,opt,name=translatedHostname,proto3" json:"translatedHostname,omitempty"`
	TranslatedPort     *PortInfo              `protobuf:"bytes,5,opt,name=translatedPort,proto3" json:"translatedPort,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ForwardingRule) Reset() {
	*x = ForwardingRule{}
	mi := &file_daemon_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardingRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingRule) ProtoMessage() {}

func (x *ForwardingRule) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingRule.ProtoReflect.Descriptor instead.
func (*ForwardingRule) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{27}
}

func (x *ForwardingRule) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ForwardingRule) GetDestinationPort() *PortInfo {
	if x != nil {
		return x.DestinationPort
	}
	return nil
}

func (x *ForwardingRule) GetTranslatedAddress() string {
	if x != nil {
		return x.TranslatedAddress
	}
	return ""
}

func (x *ForwardingRule) GetTranslatedHostname() string {
	if x != nil {
		return x.TranslatedHostname
	}
	return ""
}

func (x *ForwardingRule) GetTranslatedPort() *PortInfo {
	if x != nil {
		return x.TranslatedPort
	}
	return nil
}

type ForwardingRulesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rules         []*ForwardingRule      `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ForwardingRulesResponse) Reset() {
	*x = ForwardingRulesResponse{}
	mi := &file_daemon_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForwardingRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForwardingRulesResponse) ProtoMessage() {}

func (x *ForwardingRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForwardingRulesResponse.ProtoReflect.Descriptor instead.
func (*ForwardingRulesResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{28}
}

func (x *ForwardingRulesResponse) GetRules() []*ForwardingRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

// DebugBundler
type DebugBundleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Anonymize     bool                   `protobuf:"varint,1,opt,name=anonymize,proto3" json:"anonymize,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	SystemInfo    bool                   `protobuf:"varint,3,opt,name=systemInfo,proto3" json:"systemInfo,omitempty"`
	UploadURL     string                 `protobuf:"bytes,4,opt,name=uploadURL,proto3" json:"uploadURL,omitempty"`
	LogFileCount  uint32                 `protobuf:"varint,5,opt,name=logFileCount,proto3" json:"logFileCount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DebugBundleRequest) Reset() {
	*x = DebugBundleRequest{}
	mi := &file_daemon_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugBundleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugBundleRequest) ProtoMessage() {}

func (x *DebugBundleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugBundleRequest.ProtoReflect.Descriptor instead.
func (*DebugBundleRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{29}
}

func (x *DebugBundleRequest) GetAnonymize() bool {
	if x != nil {
		return x.Anonymize
	}
	return false
}

func (x *DebugBundleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DebugBundleRequest) GetSystemInfo() bool {
	if x != nil {
		return x.SystemInfo
	}
	return false
}

func (x *DebugBundleRequest) GetUploadURL() string {
	if x != nil {
		return x.UploadURL
	}
	return ""
}

func (x *DebugBundleRequest) GetLogFileCount() uint32 {
	if x != nil {
		return x.LogFileCount
	}
	return 0
}

type DebugBundleResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Path                string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	UploadedKey         string                 `protobuf:"bytes,2,opt,name=uploadedKey,proto3" json:"uploadedKey,omitempty"`
	UploadFailureReason string                 `protobuf:"bytes,3,opt,name=uploadFailureReason,proto3" json:"uploadFailureReason,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DebugBundleResponse) Reset() {
	*x = DebugBundleResponse{}
	mi := &file_daemon_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DebugBundleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugBundleResponse) ProtoMessage() {}

func (x *DebugBundleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugBundleResponse.ProtoReflect.Descriptor instead.
func (*DebugBundleResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{30}
}

func (x *DebugBundleResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *DebugBundleResponse) GetUploadedKey() string {
	if x != nil {
		return x.UploadedKey
	}
	return ""
}

func (x *DebugBundleResponse) GetUploadFailureReason() string {
	if x != nil {
		return x.UploadFailureReason
	}
	return ""
}

type GetLogLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogLevelRequest) Reset() {
	*x = GetLogLevelRequest{}
	mi := &file_daemon_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelRequest) ProtoMessage() {}

func (x *GetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogLevelRequest.ProtoReflect.Descriptor instead.
func (*GetLogLevelRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{31}
}

type GetLogLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         LogLevel               `protobuf:"varint,1,opt,name=level,proto3,enum=daemon.LogLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLogLevelResponse) Reset() {
	*x = GetLogLevelResponse{}
	mi := &file_daemon_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLogLevelResponse) ProtoMessage() {}

func (x *GetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLogLevelResponse.ProtoReflect.Descriptor instead.
func (*GetLogLevelResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{32}
}

func (x *GetLogLevelResponse) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_UNKNOWN
}

type SetLogLevelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         LogLevel               `protobuf:"varint,1,opt,name=level,proto3,enum=daemon.LogLevel" json:"level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelRequest) Reset() {
	*x = SetLogLevelRequest{}
	mi := &file_daemon_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelRequest) ProtoMessage() {}

func (x *SetLogLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelRequest.ProtoReflect.Descriptor instead.
func (*SetLogLevelRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{33}
}

func (x *SetLogLevelRequest) GetLevel() LogLevel {
	if x != nil {
		return x.Level
	}
	return LogLevel_UNKNOWN
}

type SetLogLevelResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetLogLevelResponse) Reset() {
	*x = SetLogLevelResponse{}
	mi := &file_daemon_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetLogLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetLogLevelResponse) ProtoMessage() {}

func (x *SetLogLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetLogLevelResponse.ProtoReflect.Descriptor instead.
func (*SetLogLevelResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{34}
}

// State represents a daemon state entry
type State struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *State) Reset() {
	*x = State{}
	mi := &file_daemon_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{35}
}

func (x *State) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListStatesRequest is empty as it requires no parameters
type ListStatesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStatesRequest) Reset() {
	*x = ListStatesRequest{}
	mi := &file_daemon_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatesRequest) ProtoMessage() {}

func (x *ListStatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatesRequest.ProtoReflect.Descriptor instead.
func (*ListStatesRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{36}
}

// ListStatesResponse contains a list of states
type ListStatesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	States        []*State               `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStatesResponse) Reset() {
	*x = ListStatesResponse{}
	mi := &file_daemon_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStatesResponse) ProtoMessage() {}

func (x *ListStatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStatesResponse.ProtoReflect.Descriptor instead.
func (*ListStatesResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{37}
}

func (x *ListStatesResponse) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

// CleanStateRequest for cleaning states
type CleanStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StateName     string                 `protobuf:"bytes,1,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
	All           bool                   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanStateRequest) Reset() {
	*x = CleanStateRequest{}
	mi := &file_daemon_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanStateRequest) ProtoMessage() {}

func (x *CleanStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanStateRequest.ProtoReflect.Descriptor instead.
func (*CleanStateRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{38}
}

func (x *CleanStateRequest) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *CleanStateRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

// CleanStateResponse contains the result of the clean operation
type CleanStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CleanedStates int32                  `protobuf:"varint,1,opt,name=cleaned_states,json=cleanedStates,proto3" json:"cleaned_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanStateResponse) Reset() {
	*x = CleanStateResponse{}
	mi := &file_daemon_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanStateResponse) ProtoMessage() {}

func (x *CleanStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanStateResponse.ProtoReflect.Descriptor instead.
func (*CleanStateResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{39}
}

func (x *CleanStateResponse) GetCleanedStates() int32 {
	if x != nil {
		return x.CleanedStates
	}
	return 0
}

// DeleteStateRequest for deleting states
type DeleteStateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StateName     string                 `protobuf:"bytes,1,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
	All           bool                   `protobuf:"varint,2,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStateRequest) Reset() {
	*x = DeleteStateRequest{}
	mi := &file_daemon_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStateRequest) ProtoMessage() {}

func (x *DeleteStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStateRequest.ProtoReflect.Descriptor instead.
func (*DeleteStateRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{40}
}

func (x *DeleteStateRequest) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *DeleteStateRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

// DeleteStateResponse contains the result of the delete operation
type DeleteStateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedStates int32                  `protobuf:"varint,1,opt,name=deleted_states,json=deletedStates,proto3" json:"deleted_states,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteStateResponse) Reset() {
	*x = DeleteStateResponse{}
	mi := &file_daemon_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteStateResponse) ProtoMessage() {}

func (x *DeleteStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteStateResponse.ProtoReflect.Descriptor instead.
func (*DeleteStateResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteStateResponse) GetDeletedStates() int32 {
	if x != nil {
		return x.DeletedStates
	}
	return 0
}

type SetNetworkMapPersistenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetNetworkMapPersistenceRequest) Reset() {
	*x = SetNetworkMapPersistenceRequest{}
	mi := &file_daemon_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNetworkMapPersistenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNetworkMapPersistenceRequest) ProtoMessage() {}

func (x *SetNetworkMapPersistenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNetworkMapPersistenceRequest.ProtoReflect.Descriptor instead.
func (*SetNetworkMapPersistenceRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{42}
}

func (x *SetNetworkMapPersistenceRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SetNetworkMapPersistenceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetNetworkMapPersistenceResponse) Reset() {
	*x = SetNetworkMapPersistenceResponse{}
	mi := &file_daemon_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetNetworkMapPersistenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetNetworkMapPersistenceResponse) ProtoMessage() {}

func (x *SetNetworkMapPersistenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetNetworkMapPersistenceResponse.ProtoReflect.Descriptor instead.
func (*SetNetworkMapPersistenceResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{43}
}

type TCPFlags struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Syn           bool                   `protobuf:"varint,1,opt,name=syn,proto3" json:"syn,omitempty"`
	Ack           bool                   `protobuf:"varint,2,opt,name=ack,proto3" json:"ack,omitempty"`
	Fin           bool                   `protobuf:"varint,3,opt,name=fin,proto3" json:"fin,omitempty"`
	Rst           bool                   `protobuf:"varint,4,opt,name=rst,proto3" json:"rst,omitempty"`
	Psh           bool                   `protobuf:"varint,5,opt,name=psh,proto3" json:"psh,omitempty"`
	Urg           bool                   `protobuf:"varint,6,opt,name=urg,proto3" json:"urg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TCPFlags) Reset() {
	*x = TCPFlags{}
	mi := &file_daemon_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TCPFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TCPFlags) ProtoMessage() {}

func (x *TCPFlags) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TCPFlags.ProtoReflect.Descriptor instead.
func (*TCPFlags) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{44}
}

func (x *TCPFlags) GetSyn() bool {
	if x != nil {
		return x.Syn
	}
	return false
}

func (x *TCPFlags) GetAck() bool {
	if x != nil {
		return x.Ack
	}
	return false
}

func (x *TCPFlags) GetFin() bool {
	if x != nil {
		return x.Fin
	}
	return false
}

func (x *TCPFlags) GetRst() bool {
	if x != nil {
		return x.Rst
	}
	return false
}

func (x *TCPFlags) GetPsh() bool {
	if x != nil {
		return x.Psh
	}
	return false
}

func (x *TCPFlags) GetUrg() bool {
	if x != nil {
		return x.Urg
	}
	return false
}

type TracePacketRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SourceIp        string                 `protobuf:"bytes,1,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp   string                 `protobuf:"bytes,2,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	Protocol        string                 `protobuf:"bytes,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	SourcePort      uint32                 `protobuf:"varint,4,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort uint32                 `protobuf:"varint,5,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Direction       string                 `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	TcpFlags        *TCPFlags              `protobuf:"bytes,7,opt,name=tcp_flags,json=tcpFlags,proto3,oneof" json:"tcp_flags,omitempty"`
	IcmpType        *uint32                `protobuf:"varint,8,opt,name=icmp_type,json=icmpType,proto3,oneof" json:"icmp_type,omitempty"`
	IcmpCode        *uint32                `protobuf:"varint,9,opt,name=icmp_code,json=icmpCode,proto3,oneof" json:"icmp_code,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TracePacketRequest) Reset() {
	*x = TracePacketRequest{}
	mi := &file_daemon_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracePacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracePacketRequest) ProtoMessage() {}

func (x *TracePacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracePacketRequest.ProtoReflect.Descriptor instead.
func (*TracePacketRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{45}
}

func (x *TracePacketRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *TracePacketRequest) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *TracePacketRequest) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *TracePacketRequest) GetSourcePort() uint32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *TracePacketRequest) GetDestinationPort() uint32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *TracePacketRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *TracePacketRequest) GetTcpFlags() *TCPFlags {
	if x != nil {
		return x.TcpFlags
	}
	return nil
}

func (x *TracePacketRequest) GetIcmpType() uint32 {
	if x != nil && x.IcmpType != nil {
		return *x.IcmpType
	}
	return 0
}

func (x *TracePacketRequest) GetIcmpCode() uint32 {
	if x != nil && x.IcmpCode != nil {
		return *x.IcmpCode
	}
	return 0
}

type TraceStage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Allowed           bool                   `protobuf:"varint,3,opt,name=allowed,proto3" json:"allowed,omitempty"`
	ForwardingDetails *string                `protobuf:"bytes,4,opt,name=forwarding_details,json=forwardingDetails,proto3,oneof" json:"forwarding_details,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TraceStage) Reset() {
	*x = TraceStage{}
	mi := &file_daemon_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceStage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceStage) ProtoMessage() {}

func (x *TraceStage) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceStage.ProtoReflect.Descriptor instead.
func (*TraceStage) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{46}
}

func (x *TraceStage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TraceStage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TraceStage) GetAllowed() bool {
	if x != nil {
		return x.Allowed
	}
	return false
}

func (x *TraceStage) GetForwardingDetails() string {
	if x != nil && x.ForwardingDetails != nil {
		return *x.ForwardingDetails
	}
	return ""
}

type TracePacketResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Stages           []*TraceStage          `protobuf:"bytes,1,rep,name=stages,proto3" json:"stages,omitempty"`
	FinalDisposition bool                   `protobuf:"varint,2,opt,name=final_disposition,json=finalDisposition,proto3" json:"final_disposition,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TracePacketResponse) Reset() {
	*x = TracePacketResponse{}
	mi := &file_daemon_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracePacketResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracePacketResponse) ProtoMessage() {}

func (x *TracePacketResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracePacketResponse.ProtoReflect.Descriptor instead.
func (*TracePacketResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{47}
}

func (x *TracePacketResponse) GetStages() []*TraceStage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *TracePacketResponse) GetFinalDisposition() bool {
	if x != nil {
		return x.FinalDisposition
	}
	return false
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_daemon_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{48}
}

type SystemEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Severity      SystemEvent_Severity   `protobuf:"varint,2,opt,name=severity,proto3,enum=daemon.SystemEvent_Severity" json:"severity,omitempty"`
	Category      SystemEvent_Category   `protobuf:"varint,3,opt,name=category,proto3,enum=daemon.SystemEvent_Category" json:"category,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	UserMessage   string                 `protobuf:"bytes,5,opt,name=userMessage,proto3" json:"userMessage,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_daemon_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{49}
}

func (x *SystemEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SystemEvent) GetSeverity() SystemEvent_Severity {
	if x != nil {
		return x.Severity
	}
	return SystemEvent_INFO
}

func (x *SystemEvent) GetCategory() SystemEvent_Category {
	if x != nil {
		return x.Category
	}
	return SystemEvent_NETWORK
}

func (x *SystemEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SystemEvent) GetUserMessage() string {
	if x != nil {
		return x.UserMessage
	}
	return ""
}

func (x *SystemEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SystemEvent) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GetEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsRequest) Reset() {
	*x = GetEventsRequest{}
	mi := &file_daemon_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsRequest) ProtoMessage() {}

func (x *GetEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsRequest.ProtoReflect.Descriptor instead.
func (*GetEventsRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{50}
}

type GetEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*SystemEvent         `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetEventsResponse) Reset() {
	*x = GetEventsResponse{}
	mi := &file_daemon_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEventsResponse) ProtoMessage() {}

func (x *GetEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEventsResponse.ProtoReflect.Descriptor instead.
func (*GetEventsResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{51}
}

func (x *GetEventsResponse) GetEvents() []*SystemEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type SwitchProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileName   *string                `protobuf:"bytes,1,opt,name=profileName,proto3,oneof" json:"profileName,omitempty"`
	Username      *string                `protobuf:"bytes,2,opt,name=username,proto3,oneof" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchProfileRequest) Reset() {
	*x = SwitchProfileRequest{}
	mi := &file_daemon_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchProfileRequest) ProtoMessage() {}

func (x *SwitchProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchProfileRequest.ProtoReflect.Descriptor instead.
func (*SwitchProfileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{52}
}

func (x *SwitchProfileRequest) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *SwitchProfileRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

type SwitchProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwitchProfileResponse) Reset() {
	*x = SwitchProfileResponse{}
	mi := &file_daemon_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwitchProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchProfileResponse) ProtoMessage() {}

func (x *SwitchProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchProfileResponse.ProtoReflect.Descriptor instead.
func (*SwitchProfileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{53}
}

type SetConfigRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Username    string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProfileName string                 `protobuf:"bytes,2,opt,name=profileName,proto3" json:"profileName,omitempty"`
	// managementUrl to authenticate.
	ManagementUrl string `protobuf:"bytes,3,opt,name=managementUrl,proto3" json:"managementUrl,omitempty"`
	// adminUrl to manage keys.
	AdminURL              string   `protobuf:"bytes,4,opt,name=adminURL,proto3" json:"adminURL,omitempty"`
	RosenpassEnabled      *bool    `protobuf:"varint,5,opt,name=rosenpassEnabled,proto3,oneof" json:"rosenpassEnabled,omitempty"`
	InterfaceName         *string  `protobuf:"bytes,6,opt,name=interfaceName,proto3,oneof" json:"interfaceName,omitempty"`
	WireguardPort         *int64   `protobuf:"varint,7,opt,name=wireguardPort,proto3,oneof" json:"wireguardPort,omitempty"`
	OptionalPreSharedKey  *string  `protobuf:"bytes,8,opt,name=optionalPreSharedKey,proto3,oneof" json:"optionalPreSharedKey,omitempty"`
	DisableAutoConnect    *bool    `protobuf:"varint,9,opt,name=disableAutoConnect,proto3,oneof" json:"disableAutoConnect,omitempty"`
	ServerSSHAllowed      *bool    `protobuf:"varint,10,opt,name=serverSSHAllowed,proto3,oneof" json:"serverSSHAllowed,omitempty"`
	RosenpassPermissive   *bool    `protobuf:"varint,11,opt,name=rosenpassPermissive,proto3,oneof" json:"rosenpassPermissive,omitempty"`
	NetworkMonitor        *bool    `protobuf:"varint,12,opt,name=networkMonitor,proto3,oneof" json:"networkMonitor,omitempty"`
	DisableClientRoutes   *bool    `protobuf:"varint,13,opt,name=disable_client_routes,json=disableClientRoutes,proto3,oneof" json:"disable_client_routes,omitempty"`
	DisableServerRoutes   *bool    `protobuf:"varint,14,opt,name=disable_server_routes,json=disableServerRoutes,proto3,oneof" json:"disable_server_routes,omitempty"`
	DisableDns            *bool    `protobuf:"varint,15,opt,name=disable_dns,json=disableDns,proto3,oneof" json:"disable_dns,omitempty"`
	DisableFirewall       *bool    `protobuf:"varint,16,opt,name=disable_firewall,json=disableFirewall,proto3,oneof" json:"disable_firewall,omitempty"`
	BlockLanAccess        *bool    `protobuf:"varint,17,opt,name=block_lan_access,json=blockLanAccess,proto3,oneof" json:"block_lan_access,omitempty"`
	DisableNotifications  *bool    `protobuf:"varint,18,opt,name=disable_notifications,json=disableNotifications,proto3,oneof" json:"disable_notifications,omitempty"`
	LazyConnectionEnabled *bool    `protobuf:"varint,19,opt,name=lazyConnectionEnabled,proto3,oneof" json:"lazyConnectionEnabled,omitempty"`
	BlockInbound          *bool    `protobuf:"varint,20,opt,name=block_inbound,json=blockInbound,proto3,oneof" json:"block_inbound,omitempty"`
	NatExternalIPs        []string `protobuf:"bytes,21,rep,name=natExternalIPs,proto3" json:"natExternalIPs,omitempty"`
	CleanNATExternalIPs   bool     `protobuf:"varint,22,opt,name=cleanNATExternalIPs,proto3" json:"cleanNATExternalIPs,omitempty"`
	CustomDNSAddress      []byte   `protobuf:"bytes,23,opt,name=customDNSAddress,proto3" json:"customDNSAddress,omitempty"`
	ExtraIFaceBlacklist   []string `protobuf:"bytes,24,rep,name=extraIFaceBlacklist,proto3" json:"extraIFaceBlacklist,omitempty"`
	DnsLabels             []string `protobuf:"bytes,25,rep,name=dns_labels,json=dnsLabels,proto3" json:"dns_labels,omitempty"`
	// cleanDNSLabels clean map list of DNS labels.
	CleanDNSLabels   bool                 `protobuf:"varint,26,opt,name=cleanDNSLabels,proto3" json:"cleanDNSLabels,omitempty"`
	DnsRouteInterval *durationpb.Duration `protobuf:"bytes,27,opt,name=dnsRouteInterval,proto3,oneof" json:"dnsRouteInterval,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SetConfigRequest) Reset() {
	*x = SetConfigRequest{}
	mi := &file_daemon_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigRequest) ProtoMessage() {}

func (x *SetConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigRequest.ProtoReflect.Descriptor instead.
func (*SetConfigRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{54}
}

func (x *SetConfigRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SetConfigRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *SetConfigRequest) GetManagementUrl() string {
	if x != nil {
		return x.ManagementUrl
	}
	return ""
}

func (x *SetConfigRequest) GetAdminURL() string {
	if x != nil {
		return x.AdminURL
	}
	return ""
}

func (x *SetConfigRequest) GetRosenpassEnabled() bool {
	if x != nil && x.RosenpassEnabled != nil {
		return *x.RosenpassEnabled
	}
	return false
}

func (x *SetConfigRequest) GetInterfaceName() string {
	if x != nil && x.InterfaceName != nil {
		return *x.InterfaceName
	}
	return ""
}

func (x *SetConfigRequest) GetWireguardPort() int64 {
	if x != nil && x.WireguardPort != nil {
		return *x.WireguardPort
	}
	return 0
}

func (x *SetConfigRequest) GetOptionalPreSharedKey() string {
	if x != nil && x.OptionalPreSharedKey != nil {
		return *x.OptionalPreSharedKey
	}
	return ""
}

func (x *SetConfigRequest) GetDisableAutoConnect() bool {
	if x != nil && x.DisableAutoConnect != nil {
		return *x.DisableAutoConnect
	}
	return false
}

func (x *SetConfigRequest) GetServerSSHAllowed() bool {
	if x != nil && x.ServerSSHAllowed != nil {
		return *x.ServerSSHAllowed
	}
	return false
}

func (x *SetConfigRequest) GetRosenpassPermissive() bool {
	if x != nil && x.RosenpassPermissive != nil {
		return *x.RosenpassPermissive
	}
	return false
}

func (x *SetConfigRequest) GetNetworkMonitor() bool {
	if x != nil && x.NetworkMonitor != nil {
		return *x.NetworkMonitor
	}
	return false
}

func (x *SetConfigRequest) GetDisableClientRoutes() bool {
	if x != nil && x.DisableClientRoutes != nil {
		return *x.DisableClientRoutes
	}
	return false
}

func (x *SetConfigRequest) GetDisableServerRoutes() bool {
	if x != nil && x.DisableServerRoutes != nil {
		return *x.DisableServerRoutes
	}
	return false
}

func (x *SetConfigRequest) GetDisableDns() bool {
	if x != nil && x.DisableDns != nil {
		return *x.DisableDns
	}
	return false
}

func (x *SetConfigRequest) GetDisableFirewall() bool {
	if x != nil && x.DisableFirewall != nil {
		return *x.DisableFirewall
	}
	return false
}

func (x *SetConfigRequest) GetBlockLanAccess() bool {
	if x != nil && x.BlockLanAccess != nil {
		return *x.BlockLanAccess
	}
	return false
}

func (x *SetConfigRequest) GetDisableNotifications() bool {
	if x != nil && x.DisableNotifications != nil {
		return *x.DisableNotifications
	}
	return false
}

func (x *SetConfigRequest) GetLazyConnectionEnabled() bool {
	if x != nil && x.LazyConnectionEnabled != nil {
		return *x.LazyConnectionEnabled
	}
	return false
}

func (x *SetConfigRequest) GetBlockInbound() bool {
	if x != nil && x.BlockInbound != nil {
		return *x.BlockInbound
	}
	return false
}

func (x *SetConfigRequest) GetNatExternalIPs() []string {
	if x != nil {
		return x.NatExternalIPs
	}
	return nil
}

func (x *SetConfigRequest) GetCleanNATExternalIPs() bool {
	if x != nil {
		return x.CleanNATExternalIPs
	}
	return false
}

func (x *SetConfigRequest) GetCustomDNSAddress() []byte {
	if x != nil {
		return x.CustomDNSAddress
	}
	return nil
}

func (x *SetConfigRequest) GetExtraIFaceBlacklist() []string {
	if x != nil {
		return x.ExtraIFaceBlacklist
	}
	return nil
}

func (x *SetConfigRequest) GetDnsLabels() []string {
	if x != nil {
		return x.DnsLabels
	}
	return nil
}

func (x *SetConfigRequest) GetCleanDNSLabels() bool {
	if x != nil {
		return x.CleanDNSLabels
	}
	return false
}

func (x *SetConfigRequest) GetDnsRouteInterval() *durationpb.Duration {
	if x != nil {
		return x.DnsRouteInterval
	}
	return nil
}

type SetConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SetConfigResponse) Reset() {
	*x = SetConfigResponse{}
	mi := &file_daemon_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SetConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetConfigResponse) ProtoMessage() {}

func (x *SetConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetConfigResponse.ProtoReflect.Descriptor instead.
func (*SetConfigResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{55}
}

type AddProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProfileName   string                 `protobuf:"bytes,2,opt,name=profileName,proto3" json:"profileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddProfileRequest) Reset() {
	*x = AddProfileRequest{}
	mi := &file_daemon_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfileRequest) ProtoMessage() {}

func (x *AddProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfileRequest.ProtoReflect.Descriptor instead.
func (*AddProfileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{56}
}

func (x *AddProfileRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddProfileRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type AddProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddProfileResponse) Reset() {
	*x = AddProfileResponse{}
	mi := &file_daemon_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProfileResponse) ProtoMessage() {}

func (x *AddProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProfileResponse.ProtoReflect.Descriptor instead.
func (*AddProfileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{57}
}

type RemoveProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	ProfileName   string                 `protobuf:"bytes,2,opt,name=profileName,proto3" json:"profileName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveProfileRequest) Reset() {
	*x = RemoveProfileRequest{}
	mi := &file_daemon_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProfileRequest) ProtoMessage() {}

func (x *RemoveProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProfileRequest.ProtoReflect.Descriptor instead.
func (*RemoveProfileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{58}
}

func (x *RemoveProfileRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RemoveProfileRequest) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

type RemoveProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveProfileResponse) Reset() {
	*x = RemoveProfileResponse{}
	mi := &file_daemon_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveProfileResponse) ProtoMessage() {}

func (x *RemoveProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveProfileResponse.ProtoReflect.Descriptor instead.
func (*RemoveProfileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{59}
}

type ListProfilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProfilesRequest) Reset() {
	*x = ListProfilesRequest{}
	mi := &file_daemon_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesRequest) ProtoMessage() {}

func (x *ListProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListProfilesRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{60}
}

func (x *ListProfilesRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ListProfilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Profiles      []*Profile             `protobuf:"bytes,1,rep,name=profiles,proto3" json:"profiles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProfilesResponse) Reset() {
	*x = ListProfilesResponse{}
	mi := &file_daemon_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesResponse) ProtoMessage() {}

func (x *ListProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListProfilesResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{61}
}

func (x *ListProfilesResponse) GetProfiles() []*Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type Profile struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsActive      bool                   `protobuf:"varint,2,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Profile) Reset() {
	*x = Profile{}
	mi := &file_daemon_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{62}
}

func (x *Profile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Profile) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type GetActiveProfileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveProfileRequest) Reset() {
	*x = GetActiveProfileRequest{}
	mi := &file_daemon_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveProfileRequest) ProtoMessage() {}

func (x *GetActiveProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveProfileRequest.ProtoReflect.Descriptor instead.
func (*GetActiveProfileRequest) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{63}
}

type GetActiveProfileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileName   string                 `protobuf:"bytes,1,opt,name=profileName,proto3" json:"profileName,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveProfileResponse) Reset() {
	*x = GetActiveProfileResponse{}
	mi := &file_daemon_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveProfileResponse) ProtoMessage() {}

func (x *GetActiveProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveProfileResponse.ProtoReflect.Descriptor instead.
func (*GetActiveProfileResponse) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{64}
}

func (x *GetActiveProfileResponse) GetProfileName() string {
	if x != nil {
		return x.ProfileName
	}
	return ""
}

func (x *GetActiveProfileResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type PortInfo_Range struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         uint32                 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           uint32                 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PortInfo_Range) Reset() {
	*x = PortInfo_Range{}
	mi := &file_daemon_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PortInfo_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortInfo_Range) ProtoMessage() {}

func (x *PortInfo_Range) ProtoReflect() protoreflect.Message {
	mi := &file_daemon_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortInfo_Range.ProtoReflect.Descriptor instead.
func (*PortInfo_Range) Descriptor() ([]byte, []int) {
	return file_daemon_proto_rawDescGZIP(), []int{26, 0}
}

func (x *PortInfo_Range) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *PortInfo_Range) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

var File_daemon_proto protoreflect.FileDescriptor

const file_daemon_proto_rawDesc = "" +
	"\n" +
	"\fdaemon.proto\x12\x06daemon\x1a google/protobuf/descriptor.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"\x0e\n" +
	"\fEmptyRequest\"\xa4\x0e\n" +
	"\fLoginRequest\x12\x1a\n" +
	"\bsetupKey\x18\x01 \x01(\tR\bsetupKey\x12&\n" +
	"\fpreSharedKey\x18\x02 \x01(\tB\x02\x18\x01R\fpreSharedKey\x12$\n" +
	"\rmanagementUrl\x18\x03 \x01(\tR\rmanagementUrl\x12\x1a\n" +
	"\badminURL\x18\x04 \x01(\tR\badminURL\x12&\n" +
	"\x0enatExternalIPs\x18\x05 \x03(\tR\x0enatExternalIPs\x120\n" +
	"\x13cleanNATExternalIPs\x18\x06 \x01(\bR\x13cleanNATExternalIPs\x12*\n" +
	"\x10customDNSAddress\x18\a \x01(\fR\x10customDNSAddress\x120\n" +
	"\x13isUnixDesktopClient\x18\b \x01(\bR\x13isUnixDesktopClient\x12\x1a\n" +
	"\bhostname\x18\t \x01(\tR\bhostname\x12/\n" +
	"\x10rosenpassEnabled\x18\n" +
	" \x01(\bH\x00R\x10rosenpassEnabled\x88\x01\x01\x12)\n" +
	"\rinterfaceName\x18\v \x01(\tH\x01R\rinterfaceName\x88\x01\x01\x12)\n" +
	"\rwireguardPort\x18\f \x01(\x03H\x02R\rwireguardPort\x88\x01\x01\x127\n" +
	"\x14optionalPreSharedKey\x18\r \x01(\tH\x03R\x14optionalPreSharedKey\x88\x01\x01\x123\n" +
	"\x12disableAutoConnect\x18\x0e \x01(\bH\x04R\x12disableAutoConnect\x88\x01\x01\x12/\n" +
	"\x10serverSSHAllowed\x18\x0f \x01(\bH\x05R\x10serverSSHAllowed\x88\x01\x01\x125\n" +
	"\x13rosenpassPermissive\x18\x10 \x01(\bH\x06R\x13rosenpassPermissive\x88\x01\x01\x120\n" +
	"\x13extraIFaceBlacklist\x18\x11 \x03(\tR\x13extraIFaceBlacklist\x12+\n" +
	"\x0enetworkMonitor\x18\x12 \x01(\bH\aR\x0enetworkMonitor\x88\x01\x01\x12J\n" +
	"\x10dnsRouteInterval\x18\x13 \x01(\v2\x19.google.protobuf.DurationH\bR\x10dnsRouteInterval\x88\x01\x01\x127\n" +
	"\x15disable_client_routes\x18\x14 \x01(\bH\tR\x13disableClientRoutes\x88\x01\x01\x127\n" +
	"\x15disable_server_routes\x18\x15 \x01(\bH\n" +
	"R\x13disableServerRoutes\x88\x01\x01\x12$\n" +
	"\vdisable_dns\x18\x16 \x01(\bH\vR\n" +
	"disableDns\x88\x01\x01\x12.\n" +
	"\x10disable_firewall\x18\x17 \x01(\bH\fR\x0fdisableFirewall\x88\x01\x01\x12-\n" +
	"\x10block_lan_access\x18\x18 \x01(\bH\rR\x0eblockLanAccess\x88\x01\x01\x128\n" +
	"\x15disable_notifications\x18\x19 \x01(\bH\x0eR\x14disableNotifications\x88\x01\x01\x12\x1d\n" +
	"\n" +
	"dns_labels\x18\x1a \x03(\tR\tdnsLabels\x12&\n" +
	"\x0ecleanDNSLabels\x18\x1b \x01(\bR\x0ecleanDNSLabels\x129\n" +
	"\x15lazyConnectionEnabled\x18\x1c \x01(\bH\x0fR\x15lazyConnectionEnabled\x88\x01\x01\x12(\n" +
	"\rblock_inbound\x18\x1d \x01(\bH\x10R\fblockInbound\x88\x01\x01\x12%\n" +
	"\vprofileName\x18\x1e \x01(\tH\x11R\vprofileName\x88\x01\x01\x12\x1f\n" +
	"\busername\x18\x1f \x01(\tH\x12R\busername\x88\x01\x01B\x13\n" +
	"\x11_rosenpassEnabledB\x10\n" +
	"\x0e_interfaceNameB\x10\n" +
	"\x0e_wireguardPortB\x17\n" +
	"\x15_optionalPreSharedKeyB\x15\n" +
	"\x13_disableAutoConnectB\x13\n" +
	"\x11_serverSSHAllowedB\x16\n" +
	"\x14_rosenpassPermissiveB\x11\n" +
	"\x0f_networkMonitorB\x13\n" +
	"\x11_dnsRouteIntervalB\x18\n" +
	"\x16_disable_client_routesB\x18\n" +
	"\x16_disable_server_routesB\x0e\n" +
	"\f_disable_dnsB\x13\n" +
	"\x11_disable_firewallB\x13\n" +
	"\x11_block_lan_accessB\x18\n" +
	"\x16_disable_notificationsB\x18\n" +
	"\x16_lazyConnectionEnabledB\x10\n" +
	"\x0e_block_inboundB\x0e\n" +
	"\f_profileNameB\v\n" +
	"\t_username\"\xb5\x01\n" +
	"\rLoginResponse\x12$\n" +
	"\rneedsSSOLogin\x18\x01 \x01(\bR\rneedsSSOLogin\x12\x1a\n" +
	"\buserCode\x18\x02 \x01(\tR\buserCode\x12(\n" +
	"\x0fverificationURI\x18\x03 \x01(\tR\x0fverificationURI\x128\n" +
	"\x17verificationURIComplete\x18\x04 \x01(\tR\x17verificationURIComplete\"M\n" +
	"\x13WaitSSOLoginRequest\x12\x1a\n" +
	"\buserCode\x18\x01 \x01(\tR\buserCode\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\",\n" +
	"\x14WaitSSOLoginResponse\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\"p\n" +
	"\tUpRequest\x12%\n" +
	"\vprofileName\x18\x01 \x01(\tH\x00R\vprofileName\x88\x01\x01\x12\x1f\n" +
	"\busername\x18\x02 \x01(\tH\x01R\busername\x88\x01\x01B\x0e\n" +
	"\f_profileNameB\v\n" +
	"\t_username\"\f\n" +
	"\n" +
	"UpResponse\"g\n" +
	"\rStatusRequest\x12,\n" +
	"\x11getFullPeerStatus\x18\x01 \x01(\bR\x11getFullPeerStatus\x12(\n" +
	"\x0fshouldRunProbes\x18\x02 \x01(\bR\x0fshouldRunProbes\"\x82\x01\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x122\n" +
	"\n" +
	"fullStatus\x18\x02 \x01(\v2\x12.daemon.FullStatusR\n" +
	"fullStatus\x12$\n" +
	"\rdaemonVersion\x18\x03 \x01(\tR\rdaemonVersion\"\r\n" +
	"\vDownRequest\"\x0e\n" +
	"\fDownResponse\"P\n" +
	"\x10GetConfigRequest\x12 \n" +
	"\vprofileName\x18\x01 \x01(\tR\vprofileName\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\"\xa3\x06\n" +
	"\x11GetConfigResponse\x12$\n" +
	"\rmanagementUrl\x18\x01 \x01(\tR\rmanagementUrl\x12\x1e\n" +
	"\n" +
	"configFile\x18\x02 \x01(\tR\n" +
	"configFile\x12\x18\n" +
	"\alogFile\x18\x03 \x01(\tR\alogFile\x12\"\n" +
	"\fpreSharedKey\x18\x04 \x01(\tR\fpreSharedKey\x12\x1a\n" +
	"\badminURL\x18\x05 \x01(\tR\badminURL\x12$\n" +
	"\rinterfaceName\x18\x06 \x01(\tR\rinterfaceName\x12$\n" +
	"\rwireguardPort\x18\a \x01(\x03R\rwireguardPort\x12.\n" +
	"\x12disableAutoConnect\x18\t \x01(\bR\x12disableAutoConnect\x12*\n" +
	"\x10serverSSHAllowed\x18\n" +
	" \x01(\bR\x10serverSSHAllowed\x12*\n" +
	"\x10rosenpassEnabled\x18\v \x01(\bR\x10rosenpassEnabled\x120\n" +
	"\x13rosenpassPermissive\x18\f \x01(\bR\x13rosenpassPermissive\x123\n" +
	"\x15disable_notifications\x18\r \x01(\bR\x14disableNotifications\x124\n" +
	"\x15lazyConnectionEnabled\x18\x0e \x01(\bR\x15lazyConnectionEnabled\x12\"\n" +
	"\fblockInbound\x18\x0f \x01(\bR\fblockInbound\x12&\n" +
	"\x0enetworkMonitor\x18\x10 \x01(\bR\x0enetworkMonitor\x12\x1f\n" +
	"\vdisable_dns\x18\x11 \x01(\bR\n" +
	"disableDns\x122\n" +
	"\x15disable_client_routes\x18\x12 \x01(\bR\x13disableClientRoutes\x122\n" +
	"\x15disable_server_routes\x18\x13 \x01(\bR\x13disableServerRoutes\x12(\n" +
	"\x10block_lan_access\x18\x14 \x01(\bR\x0eblockLanAccess\"\xde\x05\n" +
	"\tPeerState\x12\x0e\n" +
	"\x02IP\x18\x01 \x01(\tR\x02IP\x12\x16\n" +
	"\x06pubKey\x18\x02 \x01(\tR\x06pubKey\x12\x1e\n" +
	"\n" +
	"connStatus\x18\x03 \x01(\tR\n" +
	"connStatus\x12F\n" +
	"\x10connStatusUpdate\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x10connStatusUpdate\x12\x18\n" +
	"\arelayed\x18\x05 \x01(\bR\arelayed\x124\n" +
	"\x15localIceCandidateType\x18\a \x01(\tR\x15localIceCandidateType\x126\n" +
	"\x16remoteIceCandidateType\x18\b \x01(\tR\x16remoteIceCandidateType\x12\x12\n" +
	"\x04fqdn\x18\t \x01(\tR\x04fqdn\x12<\n" +
	"\x19localIceCandidateEndpoint\x18\n" +
	" \x01(\tR\x19localIceCandidateEndpoint\x12>\n" +
	"\x1aremoteIceCandidateEndpoint\x18\v \x01(\tR\x1aremoteIceCandidateEndpoint\x12R\n" +
	"\x16lastWireguardHandshake\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\x16lastWireguardHandshake\x12\x18\n" +
	"\abytesRx\x18\r \x01(\x03R\abytesRx\x12\x18\n" +
	"\abytesTx\x18\x0e \x01(\x03R\abytesTx\x12*\n" +
	"\x10rosenpassEnabled\x18\x0f \x01(\bR\x10rosenpassEnabled\x12\x1a\n" +
	"\bnetworks\x18\x10 \x03(\tR\bnetworks\x123\n" +
	"\alatency\x18\x11 \x01(\v2\x19.google.protobuf.DurationR\alatency\x12\"\n" +
	"\frelayAddress\x18\x12 \x01(\tR\frelayAddress\"\xf0\x01\n" +
	"\x0eLocalPeerState\x12\x0e\n" +
	"\x02IP\x18\x01 \x01(\tR\x02IP\x12\x16\n" +
	"\x06pubKey\x18\x02 \x01(\tR\x06pubKey\x12(\n" +
	"\x0fkernelInterface\x18\x03 \x01(\bR\x0fkernelInterface\x12\x12\n" +
	"\x04fqdn\x18\x04 \x01(\tR\x04fqdn\x12*\n" +
	"\x10rosenpassEnabled\x18\x05 \x01(\bR\x10rosenpassEnabled\x120\n" +
	"\x13rosenpassPermissive\x18\x06 \x01(\bR\x13rosenpassPermissive\x12\x1a\n" +
	"\bnetworks\x18\a \x03(\tR\bnetworks\"S\n" +
	"\vSignalState\x12\x10\n" +
	"\x03URL\x18\x01 \x01(\tR\x03URL\x12\x1c\n" +
	"\tconnected\x18\x02 \x01(\bR\tconnected\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"W\n" +
	"\x0fManagementState\x12\x10\n" +
	"\x03URL\x18\x01 \x01(\tR\x03URL\x12\x1c\n" +
	"\tconnected\x18\x02 \x01(\bR\tconnected\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"R\n" +
	"\n" +
	"RelayState\x12\x10\n" +
	"\x03URI\x18\x01 \x01(\tR\x03URI\x12\x1c\n" +
	"\tavailable\x18\x02 \x01(\bR\tavailable\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"r\n" +
	"\fNSGroupState\x12\x18\n" +
	"\aservers\x18\x01 \x03(\tR\aservers\x12\x18\n" +
	"\adomains\x18\x02 \x03(\tR\adomains\x12\x18\n" +
	"\aenabled\x18\x03 \x01(\bR\aenabled\x12\x14\n" +
	"\x05error\x18\x04 \x01(\tR\x05error\"\xef\x03\n" +
	"\n" +
	"FullStatus\x12A\n" +
	"\x0fmanagementState\x18\x01 \x01(\v2\x17.daemon.ManagementStateR\x0fmanagementState\x125\n" +
	"\vsignalState\x18\x02 \x01(\v2\x13.daemon.SignalStateR\vsignalState\x12>\n" +
	"\x0elocalPeerState\x18\x03 \x01(\v2\x16.daemon.LocalPeerStateR\x0elocalPeerState\x12'\n" +
	"\x05peers\x18\x04 \x03(\v2\x11.daemon.PeerStateR\x05peers\x12*\n" +
	"\x06relays\x18\x05 \x03(\v2\x12.daemon.RelayStateR\x06relays\x125\n" +
	"\vdns_servers\x18\x06 \x03(\v2\x14.daemon.NSGroupStateR\n" +
	"dnsServers\x128\n" +
	"\x17NumberOfForwardingRules\x18\b \x01(\x05R\x17NumberOfForwardingRules\x12+\n" +
	"\x06events\x18\a \x03(\v2\x13.daemon.SystemEventR\x06events\x124\n" +
	"\x15lazyConnectionEnabled\x18\t \x01(\bR\x15lazyConnectionEnabled\"\x15\n" +
	"\x13ListNetworksRequest\"?\n" +
	"\x14ListNetworksResponse\x12'\n" +
	"\x06routes\x18\x01 \x03(\v2\x0f.daemon.NetworkR\x06routes\"a\n" +
	"\x15SelectNetworksRequest\x12\x1e\n" +
	"\n" +
	"networkIDs\x18\x01 \x03(\tR\n" +
	"networkIDs\x12\x16\n" +
	"\x06append\x18\x02 \x01(\bR\x06append\x12\x10\n" +
	"\x03all\x18\x03 \x01(\bR\x03all\"\x18\n" +
	"\x16SelectNetworksResponse\"\x1a\n" +
	"\x06IPList\x12\x10\n" +
	"\x03ips\x18\x01 \x03(\tR\x03ips\"\xf9\x01\n" +
	"\aNetwork\x12\x0e\n" +
	"\x02ID\x18\x01 \x01(\tR\x02ID\x12\x14\n" +
	"\x05range\x18\x02 \x01(\tR\x05range\x12\x1a\n" +
	"\bselected\x18\x03 \x01(\bR\bselected\x12\x18\n" +
	"\adomains\x18\x04 \x03(\tR\adomains\x12B\n" +
	"\vresolvedIPs\x18\x05 \x03(\v2 .daemon.Network.ResolvedIPsEntryR\vresolvedIPs\x1aN\n" +
	"\x10ResolvedIPsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12$\n" +
	"\x05value\x18\x02 \x01(\v2\x0e.daemon.IPListR\x05value:\x028\x01\"\x92\x01\n" +
	"\bPortInfo\x12\x14\n" +
	"\x04port\x18\x01 \x01(\rH\x00R\x04port\x12.\n" +
	"\x05range\x18\x02 \x01(\v2\x16.daemon.PortInfo.RangeH\x00R\x05range\x1a/\n" +
	"\x05Range\x12\x14\n" +
	"\x05start\x18\x01 \x01(\rR\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\rR\x03endB\x0f\n" +
	"\rportSelection\"\x80\x02\n" +
	"\x0eForwardingRule\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\tR\bprotocol\x12:\n" +
	"\x0fdestinationPort\x18\x02 \x01(\v2\x10.daemon.PortInfoR\x0fdestinationPort\x12,\n" +
	"\x11translatedAddress\x18\x03 \x01(\tR\x11translatedAddress\x12.\n" +
	"\x12translatedHostname\x18\x04 \x01(\tR\x12translatedHostname\x128\n" +
	"\x0etranslatedPort\x18\x05 \x01(\v2\x10.daemon.PortInfoR\x0etranslatedPort\"G\n" +
	"\x17ForwardingRulesResponse\x12,\n" +
	"\x05rules\x18\x01 \x03(\v2\x16.daemon.ForwardingRuleR\x05rules\"\xac\x01\n" +
	"\x12DebugBundleRequest\x12\x1c\n" +
	"\tanonymize\x18\x01 \x01(\bR\tanonymize\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"systemInfo\x18\x03 \x01(\bR\n" +
	"systemInfo\x12\x1c\n" +
	"\tuploadURL\x18\x04 \x01(\tR\tuploadURL\x12\"\n" +
	"\flogFileCount\x18\x05 \x01(\rR\flogFileCount\"}\n" +
	"\x13DebugBundleResponse\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12 \n" +
	"\vuploadedKey\x18\x02 \x01(\tR\vuploadedKey\x120\n" +
	"\x13uploadFailureReason\x18\x03 \x01(\tR\x13uploadFailureReason\"\x14\n" +
	"\x12GetLogLevelRequest\"=\n" +
	"\x13GetLogLevelResponse\x12&\n" +
	"\x05level\x18\x01 \x01(\x0e2\x10.daemon.LogLevelR\x05level\"<\n" +
	"\x12SetLogLevelRequest\x12&\n" +
	"\x05level\x18\x01 \x01(\x0e2\x10.daemon.LogLevelR\x05level\"\x15\n" +
	"\x13SetLogLevelResponse\"\x1b\n" +
	"\x05State\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\x13\n" +
	"\x11ListStatesRequest\";\n" +
	"\x12ListStatesResponse\x12%\n" +
	"\x06states\x18\x01 \x03(\v2\r.daemon.StateR\x06states\"D\n" +
	"\x11CleanStateRequest\x12\x1d\n" +
	"\n" +
	"state_name\x18\x01 \x01(\tR\tstateName\x12\x10\n" +
	"\x03all\x18\x02 \x01(\bR\x03all\";\n" +
	"\x12CleanStateResponse\x12%\n" +
	"\x0ecleaned_states\x18\x01 \x01(\x05R\rcleanedStates\"E\n" +
	"\x12DeleteStateRequest\x12\x1d\n" +
	"\n" +
	"state_name\x18\x01 \x01(\tR\tstateName\x12\x10\n" +
	"\x03all\x18\x02 \x01(\bR\x03all\"<\n" +
	"\x13DeleteStateResponse\x12%\n" +
	"\x0edeleted_states\x18\x01 \x01(\x05R\rdeletedStates\";\n" +
	"\x1fSetNetworkMapPersistenceRequest\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\"\n" +
	" SetNetworkMapPersistenceResponse\"v\n" +
	"\bTCPFlags\x12\x10\n" +
	"\x03syn\x18\x01 \x01(\bR\x03syn\x12\x10\n" +
	"\x03ack\x18\x02 \x01(\bR\x03ack\x12\x10\n" +
	"\x03fin\x18\x03 \x01(\bR\x03fin\x12\x10\n" +
	"\x03rst\x18\x04 \x01(\bR\x03rst\x12\x10\n" +
	"\x03psh\x18\x05 \x01(\bR\x03psh\x12\x10\n" +
	"\x03urg\x18\x06 \x01(\bR\x03urg\"\x80\x03\n" +
	"\x12TracePacketRequest\x12\x1b\n" +
	"\tsource_ip\x18\x01 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x02 \x01(\tR\rdestinationIp\x12\x1a\n" +
	"\bprotocol\x18\x03 \x01(\tR\bprotocol\x12\x1f\n" +
	"\vsource_port\x18\x04 \x01(\rR\n" +
	"sourcePort\x12)\n" +
	"\x10destination_port\x18\x05 \x01(\rR\x0fdestinationPort\x12\x1c\n" +
	"\tdirection\x18\x06 \x01(\tR\tdirection\x122\n" +
	"\ttcp_flags\x18\a \x01(\v2\x10.daemon.TCPFlagsH\x00R\btcpFlags\x88\x01\x01\x12 \n" +
	"\ticmp_type\x18\b \x01(\rH\x01R\bicmpType\x88\x01\x01\x12 \n" +
	"\ticmp_code\x18\t \x01(\rH\x02R\bicmpCode\x88\x01\x01B\f\n" +
	"\n" +
	"_tcp_flagsB\f\n" +
	"\n" +
	"_icmp_typeB\f\n" +
	"\n" +
	"_icmp_code\"\x9f\x01\n" +
	"\n" +
	"TraceStage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\aallowed\x18\x03 \x01(\bR\aallowed\x122\n" +
	"\x12forwarding_details\x18\x04 \x01(\tH\x00R\x11forwardingDetails\x88\x01\x01B\x15\n" +
	"\x13_forwarding_details\"n\n" +
	"\x13TracePacketResponse\x12*\n" +
	"\x06stages\x18\x01 \x03(\v2\x12.daemon.TraceStageR\x06stages\x12+\n" +
	"\x11final_disposition\x18\x02 \x01(\bR\x10finalDisposition\"\x12\n" +
	"\x10SubscribeRequest\"\x93\x04\n" +
	"\vSystemEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\bseverity\x18\x02 \x01(\x0e2\x1c.daemon.SystemEvent.SeverityR\bseverity\x128\n" +
	"\bcategory\x18\x03 \x01(\x0e2\x1c.daemon.SystemEvent.CategoryR\bcategory\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x12 \n" +
	"\vuserMessage\x18\x05 \x01(\tR\vuserMessage\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12=\n" +
	"\bmetadata\x18\a \x03(\v2!.daemon.SystemEvent.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\bSeverity\x12\b\n" +
	"\x04INFO\x10\x00\x12\v\n" +
	"\aWARNING\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x02\x12\f\n" +
	"\bCRITICAL\x10\x03\"R\n" +
	"\bCategory\x12\v\n" +
	"\aNETWORK\x10\x00\x12\a\n" +
	"\x03DNS\x10\x01\x12\x12\n" +
	"\x0eAUTHENTICATION\x10\x02\x12\x10\n" +
	"\fCONNECTIVITY\x10\x03\x12\n" +
	"\n" +
	"\x06SYSTEM\x10\x04\"\x12\n" +
	"\x10GetEventsRequest\"@\n" +
	"\x11GetEventsResponse\x12+\n" +
	"\x06events\x18\x01 \x03(\v2\x13.daemon.SystemEventR\x06events\"{\n" +
	"\x14SwitchProfileRequest\x12%\n" +
	"\vprofileName\x18\x01 \x01(\tH\x00R\vprofileName\x88\x01\x01\x12\x1f\n" +
	"\busername\x18\x02 \x01(\tH\x01R\busername\x88\x01\x01B\x0e\n" +
	"\f_profileNameB\v\n" +
	"\t_username\"\x17\n" +
	"\x15SwitchProfileResponse\"\xef\f\n" +
	"\x10SetConfigRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12 \n" +
	"\vprofileName\x18\x02 \x01(\tR\vprofileName\x12$\n" +
	"\rmanagementUrl\x18\x03 \x01(\tR\rmanagementUrl\x12\x1a\n" +
	"\badminURL\x18\x04 \x01(\tR\badminURL\x12/\n" +
	"\x10rosenpassEnabled\x18\x05 \x01(\bH\x00R\x10rosenpassEnabled\x88\x01\x01\x12)\n" +
	"\rinterfaceName\x18\x06 \x01(\tH\x01R\rinterfaceName\x88\x01\x01\x12)\n" +
	"\rwireguardPort\x18\a \x01(\x03H\x02R\rwireguardPort\x88\x01\x01\x127\n" +
	"\x14optionalPreSharedKey\x18\b \x01(\tH\x03R\x14optionalPreSharedKey\x88\x01\x01\x123\n" +
	"\x12disableAutoConnect\x18\t \x01(\bH\x04R\x12disableAutoConnect\x88\x01\x01\x12/\n" +
	"\x10serverSSHAllowed\x18\n" +
	" \x01(\bH\x05R\x10serverSSHAllowed\x88\x01\x01\x125\n" +
	"\x13rosenpassPermissive\x18\v \x01(\bH\x06R\x13rosenpassPermissive\x88\x01\x01\x12+\n" +
	"\x0enetworkMonitor\x18\f \x01(\bH\aR\x0enetworkMonitor\x88\x01\x01\x127\n" +
	"\x15disable_client_routes\x18\r \x01(\bH\bR\x13disableClientRoutes\x88\x01\x01\x127\n" +
	"\x15disable_server_routes\x18\x0e \x01(\bH\tR\x13disableServerRoutes\x88\x01\x01\x12$\n" +
	"\vdisable_dns\x18\x0f \x01(\bH\n" +
	"R\n" +
	"disableDns\x88\x01\x01\x12.\n" +
	"\x10disable_firewall\x18\x10 \x01(\bH\vR\x0fdisableFirewall\x88\x01\x01\x12-\n" +
	"\x10block_lan_access\x18\x11 \x01(\bH\fR\x0eblockLanAccess\x88\x01\x01\x128\n" +
	"\x15disable_notifications\x18\x12 \x01(\bH\rR\x14disableNotifications\x88\x01\x01\x129\n" +
	"\x15lazyConnectionEnabled\x18\x13 \x01(\bH\x0eR\x15lazyConnectionEnabled\x88\x01\x01\x12(\n" +
	"\rblock_inbound\x18\x14 \x01(\bH\x0fR\fblockInbound\x88\x01\x01\x12&\n" +
	"\x0enatExternalIPs\x18\x15 \x03(\tR\x0enatExternalIPs\x120\n" +
	"\x13cleanNATExternalIPs\x18\x16 \x01(\bR\x13cleanNATExternalIPs\x12*\n" +
	"\x10customDNSAddress\x18\x17 \x01(\fR\x10customDNSAddress\x120\n" +
	"\x13extraIFaceBlacklist\x18\x18 \x03(\tR\x13extraIFaceBlacklist\x12\x1d\n" +
	"\n" +
	"dns_labels\x18\x19 \x03(\tR\tdnsLabels\x12&\n" +
	"\x0ecleanDNSLabels\x18\x1a \x01(\bR\x0ecleanDNSLabels\x12J\n" +
	"\x10dnsRouteInterval\x18\x1b \x01(\v2\x19.google.protobuf.DurationH\x10R\x10dnsRouteInterval\x88\x01\x01B\x13\n" +
	"\x11_rosenpassEnabledB\x10\n" +
	"\x0e_interfaceNameB\x10\n" +
	"\x0e_wireguardPortB\x17\n" +
	"\x15_optionalPreSharedKeyB\x15\n" +
	"\x13_disableAutoConnectB\x13\n" +
	"\x11_serverSSHAllowedB\x16\n" +
	"\x14_rosenpassPermissiveB\x11\n" +
	"\x0f_networkMonitorB\x18\n" +
	"\x16_disable_client_routesB\x18\n" +
	"\x16_disable_server_routesB\x0e\n" +
	"\f_disable_dnsB\x13\n" +
	"\x11_disable_firewallB\x13\n" +
	"\x11_block_lan_accessB\x18\n" +
	"\x16_disable_notificationsB\x18\n" +
	"\x16_lazyConnectionEnabledB\x10\n" +
	"\x0e_block_inboundB\x13\n" +
	"\x11_dnsRouteInterval\"\x13\n" +
	"\x11SetConfigResponse\"Q\n" +
	"\x11AddProfileRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12 \n" +
	"\vprofileName\x18\x02 \x01(\tR\vprofileName\"\x14\n" +
	"\x12AddProfileResponse\"T\n" +
	"\x14RemoveProfileRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12 \n" +
	"\vprofileName\x18\x02 \x01(\tR\vprofileName\"\x17\n" +
	"\x15RemoveProfileResponse\"1\n" +
	"\x13ListProfilesRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"C\n" +
	"\x14ListProfilesResponse\x12+\n" +
	"\bprofiles\x18\x01 \x03(\v2\x0f.daemon.ProfileR\bprofiles\":\n" +
	"\aProfile\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tis_active\x18\x02 \x01(\bR\bisActive\"\x19\n" +
	"\x17GetActiveProfileRequest\"X\n" +
	"\x18GetActiveProfileResponse\x12 \n" +
	"\vprofileName\x18\x01 \x01(\tR\vprofileName\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername*b\n" +
	"\bLogLevel\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05PANIC\x10\x01\x12\t\n" +
	"\x05FATAL\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\b\n" +
	"\x04WARN\x10\x04\x12\b\n" +
	"\x04INFO\x10\x05\x12\t\n" +
	"\x05DEBUG\x10\x06\x12\t\n" +
	"\x05TRACE\x10\a2\x84\x0f\n" +
	"\rDaemonService\x126\n" +
	"\x05Login\x12\x14.daemon.LoginRequest\x1a\x15.daemon.LoginResponse\"\x00\x12K\n" +
	"\fWaitSSOLogin\x12\x1b.daemon.WaitSSOLoginRequest\x1a\x1c.daemon.WaitSSOLoginResponse\"\x00\x12-\n" +
	"\x02Up\x12\x11.daemon.UpRequest\x1a\x12.daemon.UpResponse\"\x00\x129\n" +
	"\x06Status\x12\x15.daemon.StatusRequest\x1a\x16.daemon.StatusResponse\"\x00\x123\n" +
	"\x04Down\x12\x13.daemon.DownRequest\x1a\x14.daemon.DownResponse\"\x00\x12B\n" +
	"\tGetConfig\x12\x18.daemon.GetConfigRequest\x1a\x19.daemon.GetConfigResponse\"\x00\x12K\n" +
	"\fListNetworks\x12\x1b.daemon.ListNetworksRequest\x1a\x1c.daemon.ListNetworksResponse\"\x00\x12Q\n" +
	"\x0eSelectNetworks\x12\x1d.daemon.SelectNetworksRequest\x1a\x1e.daemon.SelectNetworksResponse\"\x00\x12S\n" +
	"\x10DeselectNetworks\x12\x1d.daemon.SelectNetworksRequest\x1a\x1e.daemon.SelectNetworksResponse\"\x00\x12J\n" +
	"\x0fForwardingRules\x12\x14.daemon.EmptyRequest\x1a\x1f.daemon.ForwardingRulesResponse\"\x00\x12H\n" +
	"\vDebugBundle\x12\x1a.daemon.DebugBundleRequest\x1a\x1b.daemon.DebugBundleResponse\"\x00\x12H\n" +
	"\vGetLogLevel\x12\x1a.daemon.GetLogLevelRequest\x1a\x1b.daemon.GetLogLevelResponse\"\x00\x12H\n" +
	"\vSetLogLevel\x12\x1a.daemon.SetLogLevelRequest\x1a\x1b.daemon.SetLogLevelResponse\"\x00\x12E\n" +
	"\n" +
	"ListStates\x12\x19.daemon.ListStatesRequest\x1a\x1a.daemon.ListStatesResponse\"\x00\x12E\n" +
	"\n" +
	"CleanState\x12\x19.daemon.CleanStateRequest\x1a\x1a.daemon.CleanStateResponse\"\x00\x12H\n" +
	"\vDeleteState\x12\x1a.daemon.DeleteStateRequest\x1a\x1b.daemon.DeleteStateResponse\"\x00\x12o\n" +
	"\x18SetNetworkMapPersistence\x12'.daemon.SetNetworkMapPersistenceRequest\x1a(.daemon.SetNetworkMapPersistenceResponse\"\x00\x12H\n" +
	"\vTracePacket\x12\x1a.daemon.TracePacketRequest\x1a\x1b.daemon.TracePacketResponse\"\x00\x12D\n" +
	"\x0fSubscribeEvents\x12\x18.daemon.SubscribeRequest\x1a\x13.daemon.SystemEvent\"\x000\x01\x12B\n" +
	"\tGetEvents\x12\x18.daemon.GetEventsRequest\x1a\x19.daemon.GetEventsResponse\"\x00\x12N\n" +
	"\rSwitchProfile\x12\x1c.daemon.SwitchProfileRequest\x1a\x1d.daemon.SwitchProfileResponse\"\x00\x12B\n" +
	"\tSetConfig\x12\x18.daemon.SetConfigRequest\x1a\x19.daemon.SetConfigResponse\"\x00\x12E\n" +
	"\n" +
	"AddProfile\x12\x19.daemon.AddProfileRequest\x1a\x1a.daemon.AddProfileResponse\"\x00\x12N\n" +
	"\rRemoveProfile\x12\x1c.daemon.RemoveProfileRequest\x1a\x1d.daemon.RemoveProfileResponse\"\x00\x12K\n" +
	"\fListProfiles\x12\x1b.daemon.ListProfilesRequest\x1a\x1c.daemon.ListProfilesResponse\"\x00\x12W\n" +
	"\x10GetActiveProfile\x12\x1f.daemon.GetActiveProfileRequest\x1a .daemon.GetActiveProfileResponse\"\x00B\bZ\x06/protob\x06proto3"

var (
	file_daemon_proto_rawDescOnce sync.Once
	file_daemon_proto_rawDescData []byte
)

func file_daemon_proto_rawDescGZIP() []byte {
	file_daemon_proto_rawDescOnce.Do(func() {
		file_daemon_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_daemon_proto_rawDesc), len(file_daemon_proto_rawDesc)))
	})
	return file_daemon_proto_rawDescData
}

var file_daemon_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_daemon_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_daemon_proto_goTypes = []any{
	(LogLevel)(0),                            // 0: daemon.LogLevel
	(SystemEvent_Severity)(0),                // 1: daemon.SystemEvent.Severity
	(SystemEvent_Category)(0),                // 2: daemon.SystemEvent.Category
	(*EmptyRequest)(nil),                     // 3: daemon.EmptyRequest
	(*LoginRequest)(nil),                     // 4: daemon.LoginRequest
	(*LoginResponse)(nil),                    // 5: daemon.LoginResponse
	(*WaitSSOLoginRequest)(nil),              // 6: daemon.WaitSSOLoginRequest
	(*WaitSSOLoginResponse)(nil),             // 7: daemon.WaitSSOLoginResponse
	(*UpRequest)(nil),                        // 8: daemon.UpRequest
	(*UpResponse)(nil),                       // 9: daemon.UpResponse
	(*StatusRequest)(nil),                    // 10: daemon.StatusRequest
	(*StatusResponse)(nil),                   // 11: daemon.StatusResponse
	(*DownRequest)(nil),                      // 12: daemon.DownRequest
	(*DownResponse)(nil),                     // 13: daemon.DownResponse
	(*GetConfigRequest)(nil),                 // 14: daemon.GetConfigRequest
	(*GetConfigResponse)(nil),                // 15: daemon.GetConfigResponse
	(*PeerState)(nil),                        // 16: daemon.PeerState
	(*LocalPeerState)(nil),                   // 17: daemon.LocalPeerState
	(*SignalState)(nil),                      // 18: daemon.SignalState
	(*ManagementState)(nil),                  // 19: daemon.ManagementState
	(*RelayState)(nil),                       // 20: daemon.RelayState
	(*NSGroupState)(nil),                     // 21: daemon.NSGroupState
	(*FullStatus)(nil),                       // 22: daemon.FullStatus
	(*ListNetworksRequest)(nil),              // 23: daemon.ListNetworksRequest
	(*ListNetworksResponse)(nil),             // 24: daemon.ListNetworksResponse
	(*SelectNetworksRequest)(nil),            // 25: daemon.SelectNetworksRequest
	(*SelectNetworksResponse)(nil),           // 26: daemon.SelectNetworksResponse
	(*IPList)(nil),                           // 27: daemon.IPList
	(*Network)(nil),                          // 28: daemon.Network
	(*PortInfo)(nil),                         // 29: daemon.PortInfo
	(*ForwardingRule)(nil),                   // 30: daemon.ForwardingRule
	(*ForwardingRulesResponse)(nil),          // 31: daemon.ForwardingRulesResponse
	(*DebugBundleRequest)(nil),               // 32: daemon.DebugBundleRequest
	(*DebugBundleResponse)(nil),              // 33: daemon.DebugBundleResponse
	(*GetLogLevelRequest)(nil),               // 34: daemon.GetLogLevelRequest
	(*GetLogLevelResponse)(nil),              // 35: daemon.GetLogLevelResponse
	(*SetLogLevelRequest)(nil),               // 36: daemon.SetLogLevelRequest
	(*SetLogLevelResponse)(nil),              // 37: daemon.SetLogLevelResponse
	(*State)(nil),                            // 38: daemon.State
	(*ListStatesRequest)(nil),                // 39: daemon.ListStatesRequest
	(*ListStatesResponse)(nil),               // 40: daemon.ListStatesResponse
	(*CleanStateRequest)(nil),                // 41: daemon.CleanStateRequest
	(*CleanStateResponse)(nil),               // 42: daemon.CleanStateResponse
	(*DeleteStateRequest)(nil),               // 43: daemon.DeleteStateRequest
	(*DeleteStateResponse)(nil),              // 44: daemon.DeleteStateResponse
	(*SetNetworkMapPersistenceRequest)(nil),  // 45: daemon.SetNetworkMapPersistenceRequest
	(*SetNetworkMapPersistenceResponse)(nil), // 46: daemon.SetNetworkMapPersistenceResponse
	(*TCPFlags)(nil),                         // 47: daemon.TCPFlags
	(*TracePacketRequest)(nil),               // 48: daemon.TracePacketRequest
	(*TraceStage)(nil),                       // 49: daemon.TraceStage
	(*TracePacketResponse)(nil),              // 50: daemon.TracePacketResponse
	(*SubscribeRequest)(nil),                 // 51: daemon.SubscribeRequest
	(*SystemEvent)(nil),                      // 52: daemon.SystemEvent
	(*GetEventsRequest)(nil),                 // 53: daemon.GetEventsRequest
	(*GetEventsResponse)(nil),                // 54: daemon.GetEventsResponse
	(*SwitchProfileRequest)(nil),             // 55: daemon.SwitchProfileRequest
	(*SwitchProfileResponse)(nil),            // 56: daemon.SwitchProfileResponse
	(*SetConfigRequest)(nil),                 // 57: daemon.SetConfigRequest
	(*SetConfigResponse)(nil),                // 58: daemon.SetConfigResponse
	(*AddProfileRequest)(nil),                // 59: daemon.AddProfileRequest
	(*AddProfileResponse)(nil),               // 60: daemon.AddProfileResponse
	(*RemoveProfileRequest)(nil),             // 61: daemon.RemoveProfileRequest
	(*RemoveProfileResponse)(nil),            // 62: daemon.RemoveProfileResponse
	(*ListProfilesRequest)(nil),              // 63: daemon.ListProfilesRequest
	(*ListProfilesResponse)(nil),             // 64: daemon.ListProfilesResponse
	(*Profile)(nil),                          // 65: daemon.Profile
	(*GetActiveProfileRequest)(nil),          // 66: daemon.GetActiveProfileRequest
	(*GetActiveProfileResponse)(nil),         // 67: daemon.GetActiveProfileResponse
	nil,                                      // 68: daemon.Network.ResolvedIPsEntry
	(*PortInfo_Range)(nil),                   // 69: daemon.PortInfo.Range
	nil,                                      // 70: daemon.SystemEvent.MetadataEntry
	(*durationpb.Duration)(nil),              // 71: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),            // 72: google.protobuf.Timestamp
}
var file_daemon_proto_depIdxs = []int32{
	71, // 0: daemon.LoginRequest.dnsRouteInterval:type_name -> google.protobuf.Duration
	22, // 1: daemon.StatusResponse.fullStatus:type_name -> daemon.FullStatus
	72, // 2: daemon.PeerState.connStatusUpdate:type_name -> google.protobuf.Timestamp
	72, // 3: daemon.PeerState.lastWireguardHandshake:type_name -> google.protobuf.Timestamp
	71, // 4: daemon.PeerState.latency:type_name -> google.protobuf.Duration
	19, // 5: daemon.FullStatus.managementState:type_name -> daemon.ManagementState
	18, // 6: daemon.FullStatus.signalState:type_name -> daemon.SignalState
	17, // 7: daemon.FullStatus.localPeerState:type_name -> daemon.LocalPeerState
	16, // 8: daemon.FullStatus.peers:type_name -> daemon.PeerState
	20, // 9: daemon.FullStatus.relays:type_name -> daemon.RelayState
	21, // 10: daemon.FullStatus.dns_servers:type_name -> daemon.NSGroupState
	52, // 11: daemon.FullStatus.events:type_name -> daemon.SystemEvent
	28, // 12: daemon.ListNetworksResponse.routes:type_name -> daemon.Network
	68, // 13: daemon.Network.resolvedIPs:type_name -> daemon.Network.ResolvedIPsEntry
	69, // 14: daemon.PortInfo.range:type_name -> daemon.PortInfo.Range
	29, // 15: daemon.ForwardingRule.destinationPort:type_name -> daemon.PortInfo
	29, // 16: daemon.ForwardingRule.translatedPort:type_name -> daemon.PortInfo
	30, // 17: daemon.ForwardingRulesResponse.rules:type_name -> daemon.ForwardingRule
	0,  // 18: daemon.GetLogLevelResponse.level:type_name -> daemon.LogLevel
	0,  // 19: daemon.SetLogLevelRequest.level:type_name -> daemon.LogLevel
	38, // 20: daemon.ListStatesResponse.states:type_name -> daemon.State
	47, // 21: daemon.TracePacketRequest.tcp_flags:type_name -> daemon.TCPFlags
	49, // 22: daemon.TracePacketResponse.stages:type_name -> daemon.TraceStage
	1,  // 23: daemon.SystemEvent.severity:type_name -> daemon.SystemEvent.Severity
	2,  // 24: daemon.SystemEvent.category:type_name -> daemon.SystemEvent.Category
	72, // 25: daemon.SystemEvent.timestamp:type_name -> google.protobuf.Timestamp
	70, // 26: daemon.SystemEvent.metadata:type_name -> daemon.SystemEvent.MetadataEntry
	52, // 27: daemon.GetEventsResponse.events:type_name -> daemon.SystemEvent
	71, // 28: daemon.SetConfigRequest.dnsRouteInterval:type_name -> google.protobuf.Duration
	65, // 29: daemon.ListProfilesResponse.profiles:type_name -> daemon.Profile
	27, // 30: daemon.Network.ResolvedIPsEntry.value:type_name -> daemon.IPList
	4,  // 31: daemon.DaemonService.Login:input_type -> daemon.LoginRequest
	6,  // 32: daemon.DaemonService.WaitSSOLogin:input_type -> daemon.WaitSSOLoginRequest
	8,  // 33: daemon.DaemonService.Up:input_type -> daemon.UpRequest
	10, // 34: daemon.DaemonService.Status:input_type -> daemon.StatusRequest
	12, // 35: daemon.DaemonService.Down:input_type -> daemon.DownRequest
	14, // 36: daemon.DaemonService.GetConfig:input_type -> daemon.GetConfigRequest
	23, // 37: daemon.DaemonService.ListNetworks:input_type -> daemon.ListNetworksRequest
	25, // 38: daemon.DaemonService.SelectNetworks:input_type -> daemon.SelectNetworksRequest
	25, // 39: daemon.DaemonService.DeselectNetworks:input_type -> daemon.SelectNetworksRequest
	3,  // 40: daemon.DaemonService.ForwardingRules:input_type -> daemon.EmptyRequest
	32, // 41: daemon.DaemonService.DebugBundle:input_type -> daemon.DebugBundleRequest
	34, // 42: daemon.DaemonService.GetLogLevel:input_type -> daemon.GetLogLevelRequest
	36, // 43: daemon.DaemonService.SetLogLevel:input_type -> daemon.SetLogLevelRequest
	39, // 44: daemon.DaemonService.ListStates:input_type -> daemon.ListStatesRequest
	41, // 45: daemon.DaemonService.CleanState:input_type -> daemon.CleanStateRequest
	43, // 46: daemon.DaemonService.DeleteState:input_type -> daemon.DeleteStateRequest
	45, // 47: daemon.DaemonService.SetNetworkMapPersistence:input_type -> daemon.SetNetworkMapPersistenceRequest
	48, // 48: daemon.DaemonService.TracePacket:input_type -> daemon.TracePacketRequest
	51, // 49: daemon.DaemonService.SubscribeEvents:input_type -> daemon.SubscribeRequest
	53, // 50: daemon.DaemonService.GetEvents:input_type -> daemon.GetEventsRequest
	55, // 51: daemon.DaemonService.SwitchProfile:input_type -> daemon.SwitchProfileRequest
	57, // 52: daemon.DaemonService.SetConfig:input_type -> daemon.SetConfigRequest
	59, // 53: daemon.DaemonService.AddProfile:input_type -> daemon.AddProfileRequest
	61, // 54: daemon.DaemonService.RemoveProfile:input_type -> daemon.RemoveProfileRequest
	63, // 55: daemon.DaemonService.ListProfiles:input_type -> daemon.ListProfilesRequest
	66, // 56: daemon.DaemonService.GetActiveProfile:input_type -> daemon.GetActiveProfileRequest
	5,  // 57: daemon.DaemonService.Login:output_type -> daemon.LoginResponse
	7,  // 58: daemon.DaemonService.WaitSSOLogin:output_type -> daemon.WaitSSOLoginResponse
	9,  // 59: daemon.DaemonService.Up:output_type -> daemon.UpResponse
	11, // 60: daemon.DaemonService.Status:output_type -> daemon.StatusResponse
	13, // 61: daemon.DaemonService.Down:output_type -> daemon.DownResponse
	15, // 62: daemon.DaemonService.GetConfig:output_type -> daemon.GetConfigResponse
	24, // 63: daemon.DaemonService.ListNetworks:output_type -> daemon.ListNetworksResponse
	26, // 64: daemon.DaemonService.SelectNetworks:output_type -> daemon.SelectNetworksResponse
	26, // 65: daemon.DaemonService.DeselectNetworks:output_type -> daemon.SelectNetworksResponse
	31, // 66: daemon.DaemonService.ForwardingRules:output_type -> daemon.ForwardingRulesResponse
	33, // 67: daemon.DaemonService.DebugBundle:output_type -> daemon.DebugBundleResponse
	35, // 68: daemon.DaemonService.GetLogLevel:output_type -> daemon.GetLogLevelResponse
	37, // 69: daemon.DaemonService.SetLogLevel:output_type -> daemon.SetLogLevelResponse
	40, // 70: daemon.DaemonService.ListStates:output_type -> daemon.ListStatesResponse
	42, // 71: daemon.DaemonService.CleanState:output_type -> daemon.CleanStateResponse
	44, // 72: daemon.DaemonService.DeleteState:output_type -> daemon.DeleteStateResponse
	46, // 73: daemon.DaemonService.SetNetworkMapPersistence:output_type -> daemon.SetNetworkMapPersistenceResponse
	50, // 74: daemon.DaemonService.TracePacket:output_type -> daemon.TracePacketResponse
	52, // 75: daemon.DaemonService.SubscribeEvents:output_type -> daemon.SystemEvent
	54, // 76: daemon.DaemonService.GetEvents:output_type -> daemon.GetEventsResponse
	56, // 77: daemon.DaemonService.SwitchProfile:output_type -> daemon.SwitchProfileResponse
	58, // 78: daemon.DaemonService.SetConfig:output_type -> daemon.SetConfigResponse
	60, // 79: daemon.DaemonService.AddProfile:output_type -> daemon.AddProfileResponse
	62, // 80: daemon.DaemonService.RemoveProfile:output_type -> daemon.RemoveProfileResponse
	64, // 81: daemon.DaemonService.ListProfiles:output_type -> daemon.ListProfilesResponse
	67, // 82: daemon.DaemonService.GetActiveProfile:output_type -> daemon.GetActiveProfileResponse
	57, // [57:83] is the sub-list for method output_type
	31, // [31:57] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_daemon_proto_init() }
func file_daemon_proto_init() {
	if File_daemon_proto != nil {
		return
	}
	file_daemon_proto_msgTypes[1].OneofWrappers = []any{}
	file_daemon_proto_msgTypes[5].OneofWrappers = []any{}
	file_daemon_proto_msgTypes[26].OneofWrappers = []any{
		(*PortInfo_Port)(nil),
		(*PortInfo_Range_)(nil),
	}
	file_daemon_proto_msgTypes[45].OneofWrappers = []any{}
	file_daemon_proto_msgTypes[46].OneofWrappers = []any{}
	file_daemon_proto_msgTypes[52].OneofWrappers = []any{}
	file_daemon_proto_msgTypes[54].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_daemon_proto_rawDesc), len(file_daemon_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_daemon_proto_goTypes,
		DependencyIndexes: file_daemon_proto_depIdxs,
		EnumInfos:         file_daemon_proto_enumTypes,
		MessageInfos:      file_daemon_proto_msgTypes,
	}.Build()
	File_daemon_proto = out.File
	file_daemon_proto_goTypes = nil
	file_daemon_proto_depIdxs = nil
}
